# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-01-24 17:11+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: chapter
#: ./rluser.texi:42 ./rluser.texi:43
#, no-wrap
msgid "Command Line Editing"
msgstr ""

#. type: Plain text
#: ./rluser.texi:47
msgid ""
"This chapter describes the basic features of the @sc{gnu} command line "
"editing interface."
msgstr ""

#. type: ifset
#: ./rluser.texi:60
msgid ""
"Command line editing is provided by the Readline library, which is used by "
"several different programs, including Bash.  Command line editing is enabled "
"by default when using an interactive shell, unless the @option{--noediting} "
"option is supplied at shell invocation.  Line editing is also used when "
"using the @option{-e} option to the @code{read} builtin command (@pxref{Bash "
"Builtins}).  By default, the line editing commands are similar to those of "
"Emacs.  A vi-style line editing interface is also available.  Line editing "
"can be enabled at any time using the @option{-o emacs} or @option{-o vi} "
"options to the @code{set} builtin command (@pxref{The Set Builtin}), or "
"disabled using the @option{+o emacs} or @option{+o vi} options to "
"@code{set}."
msgstr ""

#. type: node
#: ./rluser.texi:70 ./rluser.texi:80
#, no-wrap
msgid "Introduction and Notation"
msgstr ""

#. type: menuentry
#: ./rluser.texi:70
msgid "Notation used in this text."
msgstr ""

#. type: section
#: ./rluser.texi:70 ./rluser.texi:118 ./rluser.texi:119
#, no-wrap
msgid "Readline Interaction"
msgstr ""

#. type: menuentry
#: ./rluser.texi:70
msgid "The minimum set of commands for editing a line."
msgstr ""

#. type: section
#: ./rluser.texi:70 ./rluser.texi:334 ./rluser.texi:335
#, no-wrap
msgid "Readline Init File"
msgstr ""

#. type: menuentry
#: ./rluser.texi:70
msgid "Customizing Readline from a user's view."
msgstr ""

#. type: section
#: ./rluser.texi:70 ./rluser.texi:1080 ./rluser.texi:1081
#, no-wrap
msgid "Bindable Readline Commands"
msgstr ""

#. type: menuentry
#: ./rluser.texi:70
msgid "A description of most of the Readline commands available for binding"
msgstr ""

#. type: section
#: ./rluser.texi:70 ./rluser.texi:1746 ./rluser.texi:1747
#, no-wrap
msgid "Readline vi Mode"
msgstr ""

#. type: menuentry
#: ./rluser.texi:70
msgid "A short description of how to make Readline behave like the vi editor."
msgstr ""

#. type: ifset
#: ./rluser.texi:77
msgid ""
"* Programmable Completion::\tHow to specify the possible completions for a "
"specific command.  * Programmable Completion Builtins::\tBuiltin commands to "
"specify how to complete arguments for a particular command.  * A "
"Programmable Completion Example::\tAn example shell function for generating "
"possible completions."
msgstr ""

#. type: section
#: ./rluser.texi:81
#, no-wrap
msgid "Introduction to Line Editing"
msgstr ""

#. type: Plain text
#: ./rluser.texi:85
msgid "The following paragraphs describe the notation used to represent keystrokes."
msgstr ""

#. type: Plain text
#: ./rluser.texi:89
msgid ""
"The text @kbd{C-k} is read as `Control-K' and describes the character "
"produced when the @key{k} key is pressed while the Control key is depressed."
msgstr ""

#. type: Plain text
#: ./rluser.texi:100
msgid ""
"The text @kbd{M-k} is read as `Meta-K' and describes the character produced "
"when the Meta key (if you have one) is depressed, and the @key{k} key is "
"pressed.  The Meta key is labeled @key{ALT} on many keyboards.  On keyboards "
"with two keys labeled @key{ALT} (usually to either side of the space bar), "
"the @key{ALT} on the left side is generally set to work as a Meta key.  The "
"@key{ALT} key on the right may also be configured to work as a Meta key or "
"may be configured as some other modifier, such as a Compose key for typing "
"accented characters."
msgstr ""

#. type: Plain text
#: ./rluser.texi:105
msgid ""
"If you do not have a Meta or @key{ALT} key, or another key working as a Meta "
"key, the identical keystroke can be generated by typing @key{ESC} "
"@emph{first}, and then typing @key{k}.  Either process is known as "
"@dfn{metafying} the @key{k} key."
msgstr ""

#. type: Plain text
#: ./rluser.texi:108
msgid ""
"The text @kbd{M-C-k} is read as `Meta-Control-k' and describes the character "
"produced by @dfn{metafying} @kbd{C-k}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:117
msgid ""
"In addition, several keys have their own names.  Specifically, @key{DEL}, "
"@key{ESC}, @key{LFD}, @key{SPC}, @key{RET}, and @key{TAB} all stand for "
"themselves when seen in this text, or in an init file (@pxref{Readline Init "
"File}).  If your keyboard lacks a @key{LFD} key, typing @key{C-j} will "
"produce the desired character.  The @key{RET} key may be labeled "
"@key{Return} or @key{Enter} on some keyboards."
msgstr ""

#. type: cindex
#: ./rluser.texi:120
#, no-wrap
msgid "interaction, readline"
msgstr ""

#. type: Plain text
#: ./rluser.texi:132
msgid ""
"Often during an interactive session you type in a long line of text, only to "
"notice that the first word on the line is misspelled.  The Readline library "
"gives you a set of commands for manipulating the text as you type it in, "
"allowing you to just fix your typo, and not forcing you to retype the "
"majority of the line.  Using these editing commands, you move the cursor to "
"the place that needs correction, and delete or insert the text of the "
"corrections.  Then, when you are satisfied with the line, you simply press "
"@key{RET}.  You do not have to be at the end of the line to press @key{RET}; "
"the entire line is accepted regardless of the location of the cursor within "
"the line."
msgstr ""

#. type: subsection
#: ./rluser.texi:139 ./rluser.texi:141 ./rluser.texi:142
#, no-wrap
msgid "Readline Bare Essentials"
msgstr ""

#. type: menuentry
#: ./rluser.texi:139
msgid "The least you need to know about Readline."
msgstr ""

#. type: subsection
#: ./rluser.texi:139 ./rluser.texi:187 ./rluser.texi:188
#, no-wrap
msgid "Readline Movement Commands"
msgstr ""

#. type: menuentry
#: ./rluser.texi:139
msgid "Moving about the input line."
msgstr ""

#. type: subsection
#: ./rluser.texi:139 ./rluser.texi:214 ./rluser.texi:215
#, no-wrap
msgid "Readline Killing Commands"
msgstr ""

#. type: menuentry
#: ./rluser.texi:139
msgid "How to delete text, and how to get it back!"
msgstr ""

#. type: subsection
#: ./rluser.texi:139 ./rluser.texi:271 ./rluser.texi:272
#, no-wrap
msgid "Readline Arguments"
msgstr ""

#. type: menuentry
#: ./rluser.texi:139
msgid "Giving numeric arguments to commands."
msgstr ""

#. type: node
#: ./rluser.texi:139 ./rluser.texi:289
#, no-wrap
msgid "Searching"
msgstr ""

#. type: menuentry
#: ./rluser.texi:139
msgid "Searching through previous lines."
msgstr ""

#. type: cindex
#: ./rluser.texi:143
#, no-wrap
msgid "notation, readline"
msgstr ""

#. type: cindex
#: ./rluser.texi:144
#, no-wrap
msgid "command editing"
msgstr ""

#. type: cindex
#: ./rluser.texi:145
#, no-wrap
msgid "editing command lines"
msgstr ""

#. type: Plain text
#: ./rluser.texi:151
msgid ""
"In order to enter characters into the line, simply type them.  The typed "
"character appears where the cursor was, and then the cursor moves one space "
"to the right.  If you mistype a character, you can use your erase character "
"to back up and delete the mistyped character."
msgstr ""

#. type: Plain text
#: ./rluser.texi:157
msgid ""
"Sometimes you may mistype a character, and not notice the error until you "
"have typed several other characters.  In that case, you can type @kbd{C-b} "
"to move the cursor to the left, and then correct your mistake.  Afterwards, "
"you can move the cursor to the right with @kbd{C-f}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:164
msgid ""
"When you add text in the middle of a line, you will notice that characters "
"to the right of the cursor are `pushed over' to make room for the text that "
"you have inserted.  Likewise, when you delete text behind the cursor, "
"characters to the right of the cursor are `pulled back' to fill in the blank "
"space created by the removal of the text.  A list of the bare essentials for "
"editing the text of an input line follows."
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:166
#, no-wrap
msgid "C-b"
msgstr ""

#. type: table
#: ./rluser.texi:168
msgid "Move back one character."
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:168
#, no-wrap
msgid "C-f"
msgstr ""

#. type: table
#: ./rluser.texi:170
msgid "Move forward one character."
msgstr ""

#. type: item
#: ./rluser.texi:170
#, no-wrap
msgid "@key{DEL} or @key{Backspace}"
msgstr ""

#. type: table
#: ./rluser.texi:172
msgid "Delete the character to the left of the cursor."
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:172
#, no-wrap
msgid "C-d"
msgstr ""

#. type: table
#: ./rluser.texi:174
msgid "Delete the character underneath the cursor."
msgstr ""

#. type: w{#1}
#: ./rluser.texi:174
#, no-wrap
msgid "Printing characters"
msgstr ""

#. type: table
#: ./rluser.texi:176
msgid "Insert the character into the line at the cursor."
msgstr ""

#. type: item
#: ./rluser.texi:176
#, no-wrap
msgid "@kbd{C-_} or @kbd{C-x C-u}"
msgstr ""

#. type: table
#: ./rluser.texi:179
msgid ""
"Undo the last editing command.  You can undo all the way back to an empty "
"line."
msgstr ""

#. type: Plain text
#: ./rluser.texi:186
msgid ""
"(Depending on your configuration, the @key{Backspace} key be set to delete "
"the character to the left of the cursor and the @key{DEL} key set to delete "
"the character underneath the cursor, like @kbd{C-d}, rather than the "
"character to the left of the cursor.)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:196
msgid ""
"The above table describes the most basic keystrokes that you need in order "
"to do editing of the input line.  For your convenience, many other commands "
"have been added in addition to @kbd{C-b}, @kbd{C-f}, @kbd{C-d}, and "
"@key{DEL}.  Here are some commands for moving more rapidly about the line."
msgstr ""

#. type: item
#: ./rluser.texi:198
#, no-wrap
msgid "C-a"
msgstr ""

#. type: table
#: ./rluser.texi:200
msgid "Move to the start of the line."
msgstr ""

#. type: item
#: ./rluser.texi:200
#, no-wrap
msgid "C-e"
msgstr ""

#. type: Plain text
#: ./rluser.texi:202 ./rluser.texi:1116
msgid "Move to the end of the line."
msgstr ""

#. type: item
#: ./rluser.texi:202
#, no-wrap
msgid "M-f"
msgstr ""

#. type: table
#: ./rluser.texi:204
msgid "Move forward a word, where a word is composed of letters and digits."
msgstr ""

#. type: item
#: ./rluser.texi:204
#, no-wrap
msgid "M-b"
msgstr ""

#. type: table
#: ./rluser.texi:206
msgid "Move backward a word."
msgstr ""

#. type: item
#: ./rluser.texi:206
#, no-wrap
msgid "C-l"
msgstr ""

#. type: table
#: ./rluser.texi:208
msgid "Clear the screen, reprinting the current line at the top."
msgstr ""

#. type: Plain text
#: ./rluser.texi:213
msgid ""
"Notice how @kbd{C-f} moves forward a character, while @kbd{M-f} moves "
"forward a word.  It is a loose convention that control keystrokes operate on "
"characters while meta keystrokes operate on words."
msgstr ""

#. type: cindex
#: ./rluser.texi:217
#, no-wrap
msgid "killing text"
msgstr ""

#. type: cindex
#: ./rluser.texi:218
#, no-wrap
msgid "yanking text"
msgstr ""

#. type: Plain text
#: ./rluser.texi:224
msgid ""
"@dfn{Killing} text means to delete the text from the line, but to save it "
"away for later use, usually by @dfn{yanking} (re-inserting)  it back into "
"the line.  (`Cut' and `paste' are more recent jargon for `kill' and `yank'.)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:228
msgid ""
"If the description for a command says that it `kills' text, then you can be "
"sure that you can get the text back in a different (or the same)  place "
"later."
msgstr ""

#. type: Plain text
#: ./rluser.texi:235
msgid ""
"When you use a kill command, the text is saved in a @dfn{kill-ring}.  Any "
"number of consecutive kills save all of the killed text together, so that "
"when you yank it back, you get it all.  The kill ring is not line specific; "
"the text that you killed on a previously typed line is available to be "
"yanked back later, when you are typing another line."
msgstr ""

#. type: cindex
#: ./rluser.texi:235
#, no-wrap
msgid "kill ring"
msgstr ""

#. type: Plain text
#: ./rluser.texi:238
msgid "Here is the list of commands for killing text."
msgstr ""

#. type: item
#: ./rluser.texi:240
#, no-wrap
msgid "C-k"
msgstr ""

#. type: table
#: ./rluser.texi:242
msgid "Kill the text from the current cursor position to the end of the line."
msgstr ""

#. type: item
#: ./rluser.texi:243
#, no-wrap
msgid "M-d"
msgstr ""

#. type: table
#: ./rluser.texi:247
msgid ""
"Kill from the cursor to the end of the current word, or, if between words, "
"to the end of the next word.  Word boundaries are the same as those used by "
"@kbd{M-f}."
msgstr ""

#. type: item
#: ./rluser.texi:248
#, no-wrap
msgid "M-@key{DEL}"
msgstr ""

#. type: table
#: ./rluser.texi:252
msgid ""
"Kill from the cursor the start of the current word, or, if between words, to "
"the start of the previous word.  Word boundaries are the same as those used "
"by @kbd{M-b}."
msgstr ""

#. type: item
#: ./rluser.texi:253
#, no-wrap
msgid "C-w"
msgstr ""

#. type: table
#: ./rluser.texi:256
msgid ""
"Kill from the cursor to the previous whitespace.  This is different than "
"@kbd{M-@key{DEL}} because the word boundaries differ."
msgstr ""

#. type: Plain text
#: ./rluser.texi:261
msgid ""
"Here is how to @dfn{yank} the text back into the line.  Yanking means to "
"copy the most-recently-killed text from the kill buffer."
msgstr ""

#. type: item
#: ./rluser.texi:263
#, no-wrap
msgid "C-y"
msgstr ""

#. type: table
#: ./rluser.texi:265
msgid "Yank the most recently killed text back into the buffer at the cursor."
msgstr ""

#. type: item
#: ./rluser.texi:266
#, no-wrap
msgid "M-y"
msgstr ""

#. type: table
#: ./rluser.texi:269
msgid ""
"Rotate the kill-ring, and yank the new top.  You can only do this if the "
"prior command is @kbd{C-y} or @kbd{M-y}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:280
msgid ""
"You can pass numeric arguments to Readline commands.  Sometimes the argument "
"acts as a repeat count, other times it is the @i{sign} of the argument that "
"is significant.  If you pass a negative argument to a command which normally "
"acts in a forward direction, that command will act in a backward direction.  "
"For example, to kill text back to the start of the line, you might type "
"@samp{M-- C-k}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:288
msgid ""
"The general way to pass numeric arguments to a command is to type meta "
"digits before the command.  If the first `digit' typed is a minus sign "
"(@samp{-}), then the sign of the argument will be negative.  Once you have "
"typed one meta digit to get the argument started, you can type the remainder "
"of the digits, and then the command.  For example, to give the @kbd{C-d} "
"command an argument of 10, you could type @samp{M-1 0 C-d}, which will "
"delete the next ten characters on the input line."
msgstr ""

#. type: subsection
#: ./rluser.texi:290
#, no-wrap
msgid "Searching for Commands in the History"
msgstr ""

#. type: Plain text
#: ./rluser.texi:293
msgid "Readline provides commands for searching through the command history"
msgstr ""

#. type: ifset
#: ./rluser.texi:295
msgid "(@pxref{Bash History Facilities})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:298
msgid ""
"for lines containing a specified string.  There are two search modes: "
"@dfn{incremental} and @dfn{non-incremental}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:314
msgid ""
"Incremental searches begin before the user has finished typing the search "
"string.  As each character of the search string is typed, Readline displays "
"the next entry from the history matching the string typed so far.  An "
"incremental search requires only as many characters as needed to find the "
"desired history entry.  To search backward in the history for a particular "
"string, type @kbd{C-r}.  Typing @kbd{C-s} searches forward through the "
"history.  The characters present in the value of the "
"@code{isearch-terminators} variable are used to terminate an incremental "
"search.  If that variable has not been assigned a value, the @key{ESC} and "
"@kbd{C-J} characters will terminate an incremental search.  @kbd{C-g} will "
"abort an incremental search and restore the original line.  When the search "
"is terminated, the history entry containing the search string becomes the "
"current line."
msgstr ""

#. type: Plain text
#: ./rluser.texi:325
msgid ""
"To find other matching entries in the history list, type @kbd{C-r} or "
"@kbd{C-s} as appropriate.  This will search backward or forward in the "
"history for the next entry matching the search string typed so far.  Any "
"other key sequence bound to a Readline command will terminate the search and "
"execute that command.  For instance, a @key{RET} will terminate the search "
"and accept the line, thereby executing the command from the history list.  A "
"movement command will terminate the search, make the last line found the "
"current line, and begin editing."
msgstr ""

#. type: Plain text
#: ./rluser.texi:329
msgid ""
"Readline remembers the last incremental search string.  If two @kbd{C-r}s "
"are typed without any intervening characters defining a new search string, "
"any remembered search string is used."
msgstr ""

#. type: Plain text
#: ./rluser.texi:333
msgid ""
"Non-incremental searches read the entire search string before starting to "
"search for matching history lines.  The search string may be typed by the "
"user or be part of the contents of the current line."
msgstr ""

#. type: cindex
#: ./rluser.texi:336
#, no-wrap
msgid "initialization file, readline"
msgstr ""

#. type: Plain text
#: ./rluser.texi:344
msgid ""
"Although the Readline library comes with a set of Emacs-like keybindings "
"installed by default, it is possible to use a different set of keybindings.  "
"Any user can customize programs that use Readline by putting commands in an "
"@dfn{inputrc} file, conventionally in his home directory.  The name of this"
msgstr ""

#. type: ifset
#: ./rluser.texi:346
msgid "file is taken from the value of the shell variable @env{INPUTRC}.  If"
msgstr ""

#. type: ifclear
#: ./rluser.texi:349
msgid "file is taken from the value of the environment variable @env{INPUTRC}.  If"
msgstr ""

#. type: Plain text
#: ./rluser.texi:353
msgid ""
"that variable is unset, the default is @file{~/.inputrc}.  If that file does "
"not exist or cannot be read, the ultimate default is @file{/etc/inputrc}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:356
msgid ""
"When a program which uses the Readline library starts up, the init file is "
"read, and the key bindings are set."
msgstr ""

#. type: Plain text
#: ./rluser.texi:359
msgid ""
"In addition, the @code{C-x C-r} command re-reads this init file, thus "
"incorporating any changes that you might have made to it."
msgstr ""

#. type: subsection
#: ./rluser.texi:362 ./rluser.texi:368 ./rluser.texi:369
#, no-wrap
msgid "Readline Init File Syntax"
msgstr ""

#. type: menuentry
#: ./rluser.texi:362
msgid "Syntax for the commands in the inputrc file."
msgstr ""

#. type: subsection
#: ./rluser.texi:364 ./rluser.texi:905 ./rluser.texi:906
#, no-wrap
msgid "Conditional Init Constructs"
msgstr ""

#. type: menuentry
#: ./rluser.texi:364
msgid "Conditional key bindings in the inputrc file."
msgstr ""

#. type: subsection
#: ./rluser.texi:366 ./rluser.texi:971 ./rluser.texi:972
#, no-wrap
msgid "Sample Init File"
msgstr ""

#. type: menuentry
#: ./rluser.texi:366
msgid "An example inputrc file."
msgstr ""

#. type: Plain text
#: ./rluser.texi:377
msgid ""
"There are only a few basic constructs allowed in the Readline init file.  "
"Blank lines are ignored.  Lines beginning with a @samp{#} are comments.  "
"Lines beginning with a @samp{$} indicate conditional constructs "
"(@pxref{Conditional Init Constructs}).  Other lines denote variable settings "
"and key bindings."
msgstr ""

#. type: item
#: ./rluser.texi:379
#, no-wrap
msgid "Variable Settings"
msgstr ""

#. type: table
#: ./rluser.texi:384
msgid ""
"You can modify the run-time behavior of Readline by altering the values of "
"variables in Readline using the @code{set} command within the init file.  "
"The syntax is simple:"
msgstr ""

#. type: example
#: ./rluser.texi:387
#, no-wrap
msgid "set @var{variable} @var{value}\n"
msgstr ""

#. type: table
#: ./rluser.texi:393
msgid ""
"Here, for example, is how to change from the default Emacs-like key binding "
"to use @code{vi} line editing commands:"
msgstr ""

#. type: example
#: ./rluser.texi:396
#, no-wrap
msgid "set editing-mode vi\n"
msgstr ""

#. type: table
#: ./rluser.texi:400
msgid ""
"Variable names and values, where appropriate, are recognized without regard "
"to case.  Unrecognized variable names are ignored."
msgstr ""

#. type: table
#: ./rluser.texi:404
msgid ""
"Boolean variables (those that can be set to on or off) are set to on if the "
"value is null or empty, @var{on} (case-insensitive), or 1.  Any other value "
"results in the variable being set to off."
msgstr ""

#. type: ifset
#: ./rluser.texi:408
msgid ""
"The @w{@code{bind -V}} command lists the current Readline variable names and "
"values.  @xref{Bash Builtins}."
msgstr ""

#. type: table
#: ./rluser.texi:412
msgid ""
"A great deal of run-time behavior is changeable with the following "
"variables."
msgstr ""

#. type: cindex
#: ./rluser.texi:413
#, no-wrap
msgid "variables, readline"
msgstr ""

#. type: vindex
#: ./rluser.texi:416 ./rluser.texi:417
#, no-wrap
msgid "bell-style"
msgstr ""

#. type: table
#: ./rluser.texi:423
msgid ""
"Controls what happens when Readline wants to ring the terminal bell.  If set "
"to @samp{none}, Readline never rings the bell.  If set to @samp{visible}, "
"Readline uses a visible bell if one is available.  If set to @samp{audible} "
"(the default), Readline attempts to ring the terminal's bell."
msgstr ""

#. type: vindex
#: ./rluser.texi:424 ./rluser.texi:425
#, no-wrap
msgid "bind-tty-special-chars"
msgstr ""

#. type: table
#: ./rluser.texi:429
msgid ""
"If set to @samp{on} (the default), Readline attempts to bind the control "
"characters treated specially by the kernel's terminal driver to their "
"Readline equivalents."
msgstr ""

#. type: vindex
#: ./rluser.texi:430 ./rluser.texi:431
#, no-wrap
msgid "blink-matching-paren"
msgstr ""

#. type: table
#: ./rluser.texi:435
msgid ""
"If set to @samp{on}, Readline attempts to briefly move the cursor to an "
"opening parenthesis when a closing parenthesis is inserted.  The default is "
"@samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:436 ./rluser.texi:437
#, no-wrap
msgid "colored-completion-prefix"
msgstr ""

#. type: table
#: ./rluser.texi:443
msgid ""
"If set to @samp{on}, when listing completions, Readline displays the common "
"prefix of the set of possible completions using a different color.  The "
"color definitions are taken from the value of the @env{LS_COLORS} "
"environment variable.  The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:444 ./rluser.texi:445
#, no-wrap
msgid "colored-stats"
msgstr ""

#. type: table
#: ./rluser.texi:451
msgid ""
"If set to @samp{on}, Readline displays possible completions using different "
"colors to indicate their file type.  The color definitions are taken from "
"the value of the @env{LS_COLORS} environment variable.  The default is "
"@samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:452 ./rluser.texi:453
#, no-wrap
msgid "comment-begin"
msgstr ""

#. type: table
#: ./rluser.texi:457
msgid ""
"The string to insert at the beginning of the line when the "
"@code{insert-comment} command is executed.  The default value is "
"@code{\"#\"}."
msgstr ""

#. type: vindex
#: ./rluser.texi:458 ./rluser.texi:459
#, no-wrap
msgid "completion-display-width"
msgstr ""

#. type: table
#: ./rluser.texi:466
msgid ""
"The number of screen columns used to display possible matches when "
"performing completion.  The value is ignored if it is less than 0 or greater "
"than the terminal screen width.  A value of 0 will cause matches to be "
"displayed one per line.  The default value is -1."
msgstr ""

#. type: vindex
#: ./rluser.texi:467 ./rluser.texi:468
#, no-wrap
msgid "completion-ignore-case"
msgstr ""

#. type: table
#: ./rluser.texi:472
msgid ""
"If set to @samp{on}, Readline performs filename matching and completion in a "
"case-insensitive fashion.  The default value is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:473 ./rluser.texi:474
#, no-wrap
msgid "completion-map-case"
msgstr ""

#. type: table
#: ./rluser.texi:478
msgid ""
"If set to @samp{on}, and @var{completion-ignore-case} is enabled, Readline "
"treats hyphens (@samp{-}) and underscores (@samp{_}) as equivalent when "
"performing case-insensitive filename matching and completion."
msgstr ""

#. type: vindex
#: ./rluser.texi:479 ./rluser.texi:480
#, no-wrap
msgid "completion-prefix-display-length"
msgstr ""

#. type: table
#: ./rluser.texi:485
msgid ""
"The length in characters of the common prefix of a list of possible "
"completions that is displayed without modification.  When set to a value "
"greater than zero, common prefixes longer than this value are replaced with "
"an ellipsis when displaying possible completions."
msgstr ""

#. type: vindex
#: ./rluser.texi:486 ./rluser.texi:487
#, no-wrap
msgid "completion-query-items"
msgstr ""

#. type: table
#: ./rluser.texi:496
msgid ""
"The number of possible completions that determines when the user is asked "
"whether the list of possibilities should be displayed.  If the number of "
"possible completions is greater than this value, Readline will ask the user "
"whether or not he wishes to view them; otherwise, they are simply listed.  "
"This variable must be set to an integer value greater than or equal to 0.  A "
"negative value means Readline should never ask.  The default limit is "
"@code{100}."
msgstr ""

#. type: vindex
#: ./rluser.texi:497 ./rluser.texi:498
#, no-wrap
msgid "convert-meta"
msgstr ""

#. type: table
#: ./rluser.texi:505
msgid ""
"If set to @samp{on}, Readline will convert characters with the eighth bit "
"set to an @sc{ascii} key sequence by stripping the eighth bit and prefixing "
"an @key{ESC} character, converting them to a meta-prefixed key sequence.  "
"The default value is @samp{on}, but will be set to @samp{off} if the locale "
"is one that contains eight-bit characters."
msgstr ""

#. type: vindex
#: ./rluser.texi:506 ./rluser.texi:507
#, no-wrap
msgid "disable-completion"
msgstr ""

#. type: table
#: ./rluser.texi:511
msgid ""
"If set to @samp{On}, Readline will inhibit word completion.  Completion "
"characters will be inserted into the line as if they had been mapped to "
"@code{self-insert}.  The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:512 ./rluser.texi:513
#, no-wrap
msgid "echo-control-characters"
msgstr ""

#. type: table
#: ./rluser.texi:517
msgid ""
"When set to @samp{on}, on operating systems that indicate they support it, "
"readline echoes a character corresponding to a signal generated from the "
"keyboard.  The default is @samp{on}."
msgstr ""

#. type: vindex
#: ./rluser.texi:518 ./rluser.texi:519
#, no-wrap
msgid "editing-mode"
msgstr ""

#. type: table
#: ./rluser.texi:524
msgid ""
"The @code{editing-mode} variable controls which default set of key bindings "
"is used.  By default, Readline starts up in Emacs editing mode, where the "
"keystrokes are most similar to Emacs.  This variable can be set to either "
"@samp{emacs} or @samp{vi}."
msgstr ""

#. type: vindex
#: ./rluser.texi:525 ./rluser.texi:526
#, no-wrap
msgid "emacs-mode-string"
msgstr ""

#. type: table
#: ./rluser.texi:535
msgid ""
"This string is displayed immediately before the last line of the primary "
"prompt when emacs editing mode is active.  The value is expanded like a key "
"binding, so the standard set of meta- and control prefixes and backslash "
"escape sequences is available.  Use the @samp{\\1} and @samp{\\2} escapes to "
"begin and end sequences of non-printing characters, which can be used to "
"embed a terminal control sequence into the mode string.  The default is "
"@samp{@@}."
msgstr ""

#. type: vindex
#: ./rluser.texi:536 ./rluser.texi:537
#, no-wrap
msgid "enable-bracketed-paste"
msgstr ""

#. type: table
#: ./rluser.texi:543
msgid ""
"When set to @samp{On}, Readline will configure the terminal in a way that "
"will enable it to insert each paste into the editing buffer as a single "
"string of characters, instead of treating each character as if it had been "
"read from the keyboard.  This can prevent pasted characters from being "
"interpreted as editing commands.  The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:544 ./rluser.texi:545
#, no-wrap
msgid "enable-keypad"
msgstr ""

#. type: table
#: ./rluser.texi:549
msgid ""
"When set to @samp{on}, Readline will try to enable the application keypad "
"when it is called.  Some systems need this to enable the arrow keys.  The "
"default is @samp{off}."
msgstr ""

#. type: item
#: ./rluser.texi:550
#, no-wrap
msgid "enable-meta-key"
msgstr ""

#. type: table
#: ./rluser.texi:555
msgid ""
"When set to @samp{on}, Readline will try to enable any meta modifier key the "
"terminal claims to support when it is called.  On many terminals, the meta "
"key is used to send eight-bit characters.  The default is @samp{on}."
msgstr ""

#. type: vindex
#: ./rluser.texi:556 ./rluser.texi:557
#, no-wrap
msgid "expand-tilde"
msgstr ""

#. type: table
#: ./rluser.texi:560
msgid ""
"If set to @samp{on}, tilde expansion is performed when Readline attempts "
"word completion.  The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:561 ./rluser.texi:562
#, no-wrap
msgid "history-preserve-point"
msgstr ""

#. type: table
#: ./rluser.texi:567
msgid ""
"If set to @samp{on}, the history code attempts to place the point (the "
"current cursor position) at the same location on each history line retrieved "
"with @code{previous-history} or @code{next-history}.  The default is "
"@samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:568 ./rluser.texi:569
#, no-wrap
msgid "history-size"
msgstr ""

#. type: table
#: ./rluser.texi:578
msgid ""
"Set the maximum number of history entries saved in the history list.  If set "
"to zero, any existing history entries are deleted and no new entries are "
"saved.  If set to a value less than zero, the number of history entries is "
"not limited.  By default, the number of history entries is not limited.  If "
"an attempt is made to set @var{history-size} to a non-numeric value, the "
"maximum number of history entries will be set to 500."
msgstr ""

#. type: vindex
#: ./rluser.texi:579 ./rluser.texi:580
#, no-wrap
msgid "horizontal-scroll-mode"
msgstr ""

#. type: table
#: ./rluser.texi:586
msgid ""
"This variable can be set to either @samp{on} or @samp{off}.  Setting it to "
"@samp{on} means that the text of the lines being edited will scroll "
"horizontally on a single screen line when they are longer than the width of "
"the screen, instead of wrapping onto a new screen line.  By default, this "
"variable is set to @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:587 ./rluser.texi:588
#, no-wrap
msgid "input-meta"
msgstr ""

#. type: vindex
#: ./rluser.texi:589
#, no-wrap
msgid "meta-flag"
msgstr ""

#. type: table
#: ./rluser.texi:596
msgid ""
"If set to @samp{on}, Readline will enable eight-bit input (it will not clear "
"the eighth bit in the characters it reads), regardless of what the terminal "
"claims it can support.  The default value is @samp{off}, but Readline will "
"set it to @samp{on} if the locale contains eight-bit characters.  The name "
"@code{meta-flag} is a synonym for this variable."
msgstr ""

#. type: vindex
#: ./rluser.texi:597 ./rluser.texi:598
#, no-wrap
msgid "isearch-terminators"
msgstr ""

#. type: table
#: ./rluser.texi:603
msgid ""
"The string of characters that should terminate an incremental search without "
"subsequently executing the character as a command (@pxref{Searching}).  If "
"this variable has not been given a value, the characters @key{ESC} and "
"@kbd{C-J} will terminate an incremental search."
msgstr ""

#. type: vindex
#: ./rluser.texi:604 ./rluser.texi:605
#, no-wrap
msgid "keymap"
msgstr ""

#. type: table
#: ./rluser.texi:621
msgid ""
"Sets Readline's idea of the current keymap for key binding commands.  "
"Acceptable @code{keymap} names are @code{emacs}, @code{emacs-standard}, "
"@code{emacs-meta}, @code{emacs-ctlx}, @code{vi}, @code{vi-move}, "
"@code{vi-command}, and @code{vi-insert}.  @code{vi} is equivalent to "
"@code{vi-command} (@code{vi-move} is also a synonym); @code{emacs} is "
"equivalent to @code{emacs-standard}.  The default value is @code{emacs}.  "
"The value of the @code{editing-mode} variable also affects the default "
"keymap."
msgstr ""

#. type: item
#: ./rluser.texi:622
#, no-wrap
msgid "keyseq-timeout"
msgstr ""

#. type: table
#: ./rluser.texi:637
msgid ""
"Specifies the duration Readline will wait for a character when reading an "
"ambiguous key sequence (one that can form a complete key sequence using the "
"input read so far, or can take additional input to complete a longer key "
"sequence).  If no input is received within the timeout, Readline will use "
"the shorter but complete key sequence.  Readline uses this value to "
"determine whether or not input is available on the current input source "
"(@code{rl_instream} by default).  The value is specified in milliseconds, so "
"a value of 1000 means that Readline will wait one second for additional "
"input.  If this variable is set to a value less than or equal to zero, or to "
"a non-numeric value, Readline will wait until another key is pressed to "
"decide which key sequence to complete.  The default value is @code{500}."
msgstr ""

#. type: item
#: ./rluser.texi:638
#, no-wrap
msgid "mark-directories"
msgstr ""

#. type: table
#: ./rluser.texi:641
msgid ""
"If set to @samp{on}, completed directory names have a slash appended.  The "
"default is @samp{on}."
msgstr ""

#. type: vindex
#: ./rluser.texi:642 ./rluser.texi:643
#, no-wrap
msgid "mark-modified-lines"
msgstr ""

#. type: table
#: ./rluser.texi:647
msgid ""
"This variable, when set to @samp{on}, causes Readline to display an asterisk "
"(@samp{*}) at the start of history lines which have been modified.  This "
"variable is @samp{off} by default."
msgstr ""

#. type: vindex
#: ./rluser.texi:648 ./rluser.texi:649
#, no-wrap
msgid "mark-symlinked-directories"
msgstr ""

#. type: table
#: ./rluser.texi:654
msgid ""
"If set to @samp{on}, completed names which are symbolic links to directories "
"have a slash appended (subject to the value of @code{mark-directories}).  "
"The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:655 ./rluser.texi:656
#, no-wrap
msgid "match-hidden-files"
msgstr ""

#. type: table
#: ./rluser.texi:663
msgid ""
"This variable, when set to @samp{on}, causes Readline to match files whose "
"names begin with a @samp{.} (hidden files) when performing filename "
"completion.  If set to @samp{off}, the leading @samp{.} must be supplied by "
"the user in the filename to be completed.  This variable is @samp{on} by "
"default."
msgstr ""

#. type: vindex
#: ./rluser.texi:664 ./rluser.texi:665
#, no-wrap
msgid "menu-complete-display-prefix"
msgstr ""

#. type: table
#: ./rluser.texi:669
msgid ""
"If set to @samp{on}, menu completion displays the common prefix of the list "
"of possible completions (which may be empty) before cycling through the "
"list.  The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:670 ./rluser.texi:671
#, no-wrap
msgid "output-meta"
msgstr ""

#. type: table
#: ./rluser.texi:677
msgid ""
"If set to @samp{on}, Readline will display characters with the eighth bit "
"set directly rather than as a meta-prefixed escape sequence.  The default is "
"@samp{off}, but Readline will set it to @samp{on} if the locale contains "
"eight-bit characters."
msgstr ""

#. type: vindex
#: ./rluser.texi:678 ./rluser.texi:679
#, no-wrap
msgid "page-completions"
msgstr ""

#. type: table
#: ./rluser.texi:683
msgid ""
"If set to @samp{on}, Readline uses an internal @code{more}-like pager to "
"display a screenful of possible completions at a time.  This variable is "
"@samp{on} by default."
msgstr ""

#. type: item
#: ./rluser.texi:684
#, no-wrap
msgid "print-completions-horizontally"
msgstr ""

#. type: table
#: ./rluser.texi:688
msgid ""
"If set to @samp{on}, Readline will display completions with matches sorted "
"horizontally in alphabetical order, rather than down the screen.  The "
"default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:689 ./rluser.texi:690
#, no-wrap
msgid "revert-all-at-newline"
msgstr ""

#. type: table
#: ./rluser.texi:695
msgid ""
"If set to @samp{on}, Readline will undo all changes to history lines before "
"returning when @code{accept-line} is executed.  By default, history lines "
"may be modified and retain individual undo lists across calls to "
"@code{readline}.  The default is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:696 ./rluser.texi:697
#, no-wrap
msgid "show-all-if-ambiguous"
msgstr ""

#. type: table
#: ./rluser.texi:703
msgid ""
"This alters the default behavior of the completion functions.  If set to "
"@samp{on}, words which have more than one possible completion cause the "
"matches to be listed immediately instead of ringing the bell.  The default "
"value is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:704 ./rluser.texi:705
#, no-wrap
msgid "show-all-if-unmodified"
msgstr ""

#. type: table
#: ./rluser.texi:714
msgid ""
"This alters the default behavior of the completion functions in a fashion "
"similar to @var{show-all-if-ambiguous}.  If set to @samp{on}, words which "
"have more than one possible completion without any possible partial "
"completion (the possible completions don't share a common prefix) cause the "
"matches to be listed immediately instead of ringing the bell.  The default "
"value is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:715 ./rluser.texi:716
#, no-wrap
msgid "show-mode-in-prompt"
msgstr ""

#. type: table
#: ./rluser.texi:721
msgid ""
"If set to @samp{on}, add a character to the beginning of the prompt "
"indicating the editing mode: emacs, vi command, or vi insertion.  The mode "
"strings are user-settable.  The default value is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:722 ./rluser.texi:723
#, no-wrap
msgid "skip-completed-text"
msgstr ""

#. type: table
#: ./rluser.texi:735
msgid ""
"If set to @samp{on}, this alters the default completion behavior when "
"inserting a single match into the line.  It's only active when performing "
"completion in the middle of a word.  If enabled, readline does not insert "
"characters from the completion that match characters after point in the word "
"being completed, so portions of the word following the cursor are not "
"duplicated.  For instance, if this is enabled, attempting completion when "
"the cursor is after the @samp{e} in @samp{Makefile} will result in "
"@samp{Makefile} rather than @samp{Makefilefile}, assuming there is a single "
"possible completion.  The default value is @samp{off}."
msgstr ""

#. type: vindex
#: ./rluser.texi:736 ./rluser.texi:737
#, no-wrap
msgid "vi-cmd-mode-string"
msgstr ""

#. type: table
#: ./rluser.texi:747
msgid ""
"This string is displayed immediately before the last line of the primary "
"prompt when vi editing mode is active and in command mode.  The value is "
"expanded like a key binding, so the standard set of meta- and control "
"prefixes and backslash escape sequences is available.  Use the @samp{\\1} "
"and @samp{\\2} escapes to begin and end sequences of non-printing "
"characters, which can be used to embed a terminal control sequence into the "
"mode string.  The default is @samp{(cmd)}."
msgstr ""

#. type: vindex
#: ./rluser.texi:748 ./rluser.texi:749
#, no-wrap
msgid "vi-ins-mode-string"
msgstr ""

#. type: table
#: ./rluser.texi:759
msgid ""
"This string is displayed immediately before the last line of the primary "
"prompt when vi editing mode is active and in insertion mode.  The value is "
"expanded like a key binding, so the standard set of meta- and control "
"prefixes and backslash escape sequences is available.  Use the @samp{\\1} "
"and @samp{\\2} escapes to begin and end sequences of non-printing "
"characters, which can be used to embed a terminal control sequence into the "
"mode string.  The default is @samp{(ins)}."
msgstr ""

#. type: vindex
#: ./rluser.texi:760 ./rluser.texi:761
#, no-wrap
msgid "visible-stats"
msgstr ""

#. type: table
#: ./rluser.texi:765
msgid ""
"If set to @samp{on}, a character denoting a file's type is appended to the "
"filename when listing possible completions.  The default is @samp{off}."
msgstr ""

#. type: item
#: ./rluser.texi:768
#, no-wrap
msgid "Key Bindings"
msgstr ""

#. type: table
#: ./rluser.texi:774
msgid ""
"The syntax for controlling key bindings in the init file is simple.  First "
"you need to find the name of the command that you want to change.  The "
"following sections contain tables of the command name, the default "
"keybinding, if any, and a short description of what the command does."
msgstr ""

#. type: table
#: ./rluser.texi:783
msgid ""
"Once you know the name of the command, simply place on a line in the init "
"file the name of the key you wish to bind the command to, a colon, and then "
"the name of the command.  There can be no space between the key name and the "
"colon -- that will be interpreted as part of the key name.  The name of the "
"key can be expressed in different ways, depending on what you find most "
"comfortable."
msgstr ""

#. type: table
#: ./rluser.texi:786
msgid ""
"In addition to command names, readline allows keys to be bound to a string "
"that is inserted when the key is pressed (a @var{macro})."
msgstr ""

#. type: ifset
#: ./rluser.texi:791
msgid ""
"The @w{@code{bind -p}} command displays Readline function names and bindings "
"in a format that can put directly into an initialization file.  @xref{Bash "
"Builtins}."
msgstr ""

#. type: w{#1}
#: ./rluser.texi:794
#, no-wrap
msgid "@var{keyname}: @var{function-name} or @var{macro}"
msgstr ""

#. type: table
#: ./rluser.texi:796
msgid "@var{keyname} is the name of a key spelled out in English.  For example:"
msgstr ""

#. type: example
#: ./rluser.texi:800
#, no-wrap
msgid ""
"Control-u: universal-argument\n"
"Meta-Rubout: backward-kill-word\n"
"Control-o: \"> output\"\n"
msgstr ""

#. type: table
#: ./rluser.texi:808
msgid ""
"In the above example, @kbd{C-u} is bound to the function "
"@code{universal-argument}, @kbd{M-DEL} is bound to the function "
"@code{backward-kill-word}, and @kbd{C-o} is bound to run the macro expressed "
"on the right hand side (that is, to insert the text @samp{> output} into the "
"line)."
msgstr ""

#. type: table
#: ./rluser.texi:823
msgid ""
"A number of symbolic character names are recognized while processing this "
"key binding syntax: @var{DEL}, @var{ESC}, @var{ESCAPE}, @var{LFD}, "
"@var{NEWLINE}, @var{RET}, @var{RETURN}, @var{RUBOUT}, @var{SPACE}, "
"@var{SPC}, and @var{TAB}."
msgstr ""

#. type: w{#1}
#: ./rluser.texi:824
#, no-wrap
msgid "\"@var{keyseq}\": @var{function-name} or @var{macro}"
msgstr ""

#. type: table
#: ./rluser.texi:830
msgid ""
"@var{keyseq} differs from @var{keyname} above in that strings denoting an "
"entire key sequence can be specified, by placing the key sequence in double "
"quotes.  Some @sc{gnu} Emacs style key escapes can be used, as in the "
"following example, but the special character names are not recognized."
msgstr ""

#. type: example
#: ./rluser.texi:835
#, no-wrap
msgid ""
"\"\\C-u\": universal-argument\n"
"\"\\C-x\\C-r\": re-read-init-file\n"
"\"\\e[11~\": \"Function Key 1\"\n"
msgstr ""

#. type: table
#: ./rluser.texi:842
msgid ""
"In the above example, @kbd{C-u} is again bound to the function "
"@code{universal-argument} (just as it was in the first example), "
"@samp{@kbd{C-x} @kbd{C-r}} is bound to the function "
"@code{re-read-init-file}, and @samp{@key{ESC} @key{[} @key{1} @key{1} "
"@key{~}} is bound to insert the text @samp{Function Key 1}."
msgstr ""

#. type: table
#: ./rluser.texi:847
msgid ""
"The following @sc{gnu} Emacs style escape sequences are available when "
"specifying key sequences:"
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:849
#, no-wrap
msgid "\\C-"
msgstr ""

#. type: table
#: ./rluser.texi:851
msgid "control prefix"
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:851
#, no-wrap
msgid "\\M-"
msgstr ""

#. type: table
#: ./rluser.texi:853
msgid "meta prefix"
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:853
#, no-wrap
msgid "\\e"
msgstr ""

#. type: table
#: ./rluser.texi:855
msgid "an escape character"
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:855
#, no-wrap
msgid "\\\\"
msgstr ""

#. type: table
#: ./rluser.texi:857
msgid "backslash"
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:857
#, no-wrap
msgid "\\\""
msgstr ""

#. type: table
#: ./rluser.texi:859
msgid "@key{\"}, a double quotation mark"
msgstr ""

#. type: kbd{#1}
#: ./rluser.texi:859
#, no-wrap
msgid "\\'"
msgstr ""

#. type: table
#: ./rluser.texi:861
msgid "@key{'}, a single quote or apostrophe"
msgstr ""

#. type: table
#: ./rluser.texi:865
msgid ""
"In addition to the @sc{gnu} Emacs style escape sequences, a second set of "
"backslash escapes is available:"
msgstr ""

#. type: item
#: ./rluser.texi:867
#, no-wrap
msgid "\\a"
msgstr ""

#. type: table
#: ./rluser.texi:869
msgid "alert (bell)"
msgstr ""

#. type: item
#: ./rluser.texi:869
#, no-wrap
msgid "\\b"
msgstr ""

#. type: table
#: ./rluser.texi:871
msgid "backspace"
msgstr ""

#. type: item
#: ./rluser.texi:871
#, no-wrap
msgid "\\d"
msgstr ""

#. type: table
#: ./rluser.texi:873
msgid "delete"
msgstr ""

#. type: item
#: ./rluser.texi:873
#, no-wrap
msgid "\\f"
msgstr ""

#. type: table
#: ./rluser.texi:875
msgid "form feed"
msgstr ""

#. type: item
#: ./rluser.texi:875
#, no-wrap
msgid "\\n"
msgstr ""

#. type: table
#: ./rluser.texi:877
msgid "newline"
msgstr ""

#. type: item
#: ./rluser.texi:877
#, no-wrap
msgid "\\r"
msgstr ""

#. type: table
#: ./rluser.texi:879
msgid "carriage return"
msgstr ""

#. type: item
#: ./rluser.texi:879
#, no-wrap
msgid "\\t"
msgstr ""

#. type: table
#: ./rluser.texi:881
msgid "horizontal tab"
msgstr ""

#. type: item
#: ./rluser.texi:881
#, no-wrap
msgid "\\v"
msgstr ""

#. type: table
#: ./rluser.texi:883
msgid "vertical tab"
msgstr ""

#. type: item
#: ./rluser.texi:883
#, no-wrap
msgid "\\@var{nnn}"
msgstr ""

#. type: table
#: ./rluser.texi:886
msgid ""
"the eight-bit character whose value is the octal value @var{nnn} (one to "
"three digits)"
msgstr ""

#. type: item
#: ./rluser.texi:886
#, no-wrap
msgid "\\x@var{HH}"
msgstr ""

#. type: table
#: ./rluser.texi:889
msgid ""
"the eight-bit character whose value is the hexadecimal value @var{HH} (one "
"or two hex digits)"
msgstr ""

#. type: table
#: ./rluser.texi:899
msgid ""
"When entering the text of a macro, single or double quotes must be used to "
"indicate a macro definition.  Unquoted text is assumed to be a function "
"name.  In the macro body, the backslash escapes described above are "
"expanded.  Backslash will quote any other character in the macro text, "
"including @samp{\"} and @samp{'}.  For example, the following binding will "
"make @samp{@kbd{C-x} \\} insert a single @samp{\\} into the line:"
msgstr ""

#. type: example
#: ./rluser.texi:901
#, no-wrap
msgid "\"\\C-x\\\\\": \"\\\\\"\n"
msgstr ""

#. type: Plain text
#: ./rluser.texi:912
msgid ""
"Readline implements a facility similar in spirit to the conditional "
"compilation features of the C preprocessor which allows key bindings and "
"variable settings to be performed as the result of tests.  There are four "
"parser directives used."
msgstr ""

#. type: item
#: ./rluser.texi:914
#, no-wrap
msgid "$if"
msgstr ""

#. type: table
#: ./rluser.texi:919
msgid ""
"The @code{$if} construct allows bindings to be made based on the editing "
"mode, the terminal being used, or the application using Readline.  The text "
"of the test extends to the end of the line; no characters are required to "
"isolate it."
msgstr ""

#. type: item
#: ./rluser.texi:921
#, no-wrap
msgid "mode"
msgstr ""

#. type: table
#: ./rluser.texi:928
msgid ""
"The @code{mode=} form of the @code{$if} directive is used to test whether "
"Readline is in @code{emacs} or @code{vi} mode.  This may be used in "
"conjunction with the @samp{set keymap} command, for instance, to set "
"bindings in the @code{emacs-standard} and @code{emacs-ctlx} keymaps only if "
"Readline is starting out in @code{emacs} mode."
msgstr ""

#. type: item
#: ./rluser.texi:929
#, no-wrap
msgid "term"
msgstr ""

#. type: table
#: ./rluser.texi:937
msgid ""
"The @code{term=} form may be used to include terminal-specific key bindings, "
"perhaps to bind the key sequences output by the terminal's function keys.  "
"The word on the right side of the @samp{=} is tested against both the full "
"name of the terminal and the portion of the terminal name before the first "
"@samp{-}.  This allows @code{sun} to match both @code{sun} and "
"@code{sun-cmd}, for instance."
msgstr ""

#. type: item
#: ./rluser.texi:938
#, no-wrap
msgid "application"
msgstr ""

#. type: table
#: ./rluser.texi:946
msgid ""
"The @var{application} construct is used to include application-specific "
"settings.  Each program using the Readline library sets the @var{application "
"name}, and you can test for a particular value.  This could be used to bind "
"key sequences to functions useful for a specific program.  For instance, the "
"following command adds a key sequence that quotes the current or previous "
"word in Bash:"
msgstr ""

#. type: example
#: ./rluser.texi:951
#, no-wrap
msgid ""
"$if Bash\n"
"# Quote the current or previous word\n"
"\"\\C-xq\": \"\\eb\\\"\\ef\\\"\"\n"
"$endif\n"
msgstr ""

#. type: item
#: ./rluser.texi:954
#, no-wrap
msgid "$endif"
msgstr ""

#. type: table
#: ./rluser.texi:957
msgid ""
"This command, as seen in the previous example, terminates an @code{$if} "
"command."
msgstr ""

#. type: item
#: ./rluser.texi:958
#, no-wrap
msgid "$else"
msgstr ""

#. type: table
#: ./rluser.texi:961
msgid ""
"Commands in this branch of the @code{$if} directive are executed if the test "
"fails."
msgstr ""

#. type: item
#: ./rluser.texi:962
#, no-wrap
msgid "$include"
msgstr ""

#. type: table
#: ./rluser.texi:966
msgid ""
"This directive takes a single filename as an argument and reads commands and "
"bindings from that file.  For example, the following directive reads from "
"@file{/etc/inputrc}:"
msgstr ""

#. type: example
#: ./rluser.texi:968
#, no-wrap
msgid "$include /etc/inputrc\n"
msgstr ""

#. type: Plain text
#: ./rluser.texi:976
msgid ""
"Here is an example of an @var{inputrc} file.  This illustrates key binding, "
"variable assignment, and conditional syntax."
msgstr ""

#. type: example
#: ./rluser.texi:989
#, no-wrap
msgid ""
"# This file controls the behaviour of line input editing for\n"
"# programs that use the GNU Readline library.  Existing\n"
"# programs include FTP, Bash, and GDB.\n"
"#\n"
"# You can re-read the inputrc file with C-x C-r.\n"
"# Lines beginning with '#' are comments.\n"
"#\n"
"# First, include any system-wide bindings and variable\n"
"# assignments from /etc/Inputrc\n"
"$include /etc/Inputrc\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:992
#, no-wrap
msgid ""
"#\n"
"# Set various bindings for emacs mode.\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:994
#, no-wrap
msgid ""
"set editing-mode emacs \n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:996
#, no-wrap
msgid ""
"$if mode=emacs\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:998
#, no-wrap
msgid ""
"Meta-Control-h:\tbackward-kill-word\tText after the function name is "
"ignored\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1027
#, no-wrap
msgid ""
"#\n"
"# Arrow keys in keypad mode\n"
"#\n"
"#\"\\M-OD\":        backward-char\n"
"#\"\\M-OC\":        forward-char\n"
"#\"\\M-OA\":        previous-history\n"
"#\"\\M-OB\":        next-history\n"
"#\n"
"# Arrow keys in ANSI mode\n"
"#\n"
"\"\\M-[D\":        backward-char\n"
"\"\\M-[C\":        forward-char\n"
"\"\\M-[A\":        previous-history\n"
"\"\\M-[B\":        next-history\n"
"#\n"
"# Arrow keys in 8 bit keypad mode\n"
"#\n"
"#\"\\M-\\C-OD\":       backward-char\n"
"#\"\\M-\\C-OC\":       forward-char\n"
"#\"\\M-\\C-OA\":       previous-history\n"
"#\"\\M-\\C-OB\":       next-history\n"
"#\n"
"# Arrow keys in 8 bit ANSI mode\n"
"#\n"
"#\"\\M-\\C-[D\":       backward-char\n"
"#\"\\M-\\C-[C\":       forward-char\n"
"#\"\\M-\\C-[A\":       previous-history\n"
"#\"\\M-\\C-[B\":       next-history\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1029
#, no-wrap
msgid ""
"C-q: quoted-insert\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1031
#, no-wrap
msgid ""
"$endif\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1034
#, no-wrap
msgid ""
"# An old-style binding.  This happens to be the default.\n"
"TAB: complete\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1053
#, no-wrap
msgid ""
"# Macros that are convenient for shell interaction\n"
"$if Bash\n"
"# edit the path\n"
"\"\\C-xp\": \"PATH=$@{PATH@}\\e\\C-e\\C-a\\ef\\C-f\"\n"
"# prepare to type a quoted word --\n"
"# insert open and close double quotes\n"
"# and move to just after the open quote\n"
"\"\\C-x\\\"\": \"\\\"\\\"\\C-b\"\n"
"# insert a backslash (testing backslash escapes\n"
"# in sequences and macros)\n"
"\"\\C-x\\\\\": \"\\\\\"\n"
"# Quote the current or previous word\n"
"\"\\C-xq\": \"\\eb\\\"\\ef\\\"\"\n"
"# Add a binding to refresh the line, which is unbound\n"
"\"\\C-xr\": redraw-current-line\n"
"# Edit variable on current line.\n"
"\"\\M-\\C-v\": \"\\C-a\\C-k$\\C-y\\M-\\C-e\\C-a\\C-y=\"\n"
"$endif\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1056
#, no-wrap
msgid ""
"# use a visible bell if one is available\n"
"set bell-style visible\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1059
#, no-wrap
msgid ""
"# don't strip characters to 7 bits when reading\n"
"set input-meta on\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1063
#, no-wrap
msgid ""
"# allow iso-latin1 characters to be inserted rather\n"
"# than converted to prefix-meta sequences\n"
"set convert-meta off\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1067
#, no-wrap
msgid ""
"# display characters with the eighth bit set directly\n"
"# rather than as meta-prefixed characters\n"
"set output-meta on\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1071
#, no-wrap
msgid ""
"# if there are more than 150 possible completions for\n"
"# a word, ask the user if he wants to see all of them\n"
"set completion-query-items 150\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:1078
#, no-wrap
msgid ""
"# For FTP\n"
"$if Ftp\n"
"\"\\C-xg\": \"get \\M-?\"\n"
"\"\\C-xt\": \"put \\M-?\"\n"
"\"\\M-.\": yank-last-arg\n"
"$endif\n"
msgstr ""

#. type: subsection
#: ./rluser.texi:1092 ./rluser.texi:1108 ./rluser.texi:1109
#, no-wrap
msgid "Commands For Moving"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Moving about the line."
msgstr ""

#. type: node
#: ./rluser.texi:1092 ./rluser.texi:1150
#, no-wrap
msgid "Commands For History"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Getting at previous lines."
msgstr ""

#. type: node
#: ./rluser.texi:1092 ./rluser.texi:1258
#, no-wrap
msgid "Commands For Text"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Commands for changing text."
msgstr ""

#. type: node
#: ./rluser.texi:1092 ./rluser.texi:1345
#, no-wrap
msgid "Commands For Killing"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Commands for killing and yanking."
msgstr ""

#. type: node
#: ./rluser.texi:1092 ./rluser.texi:1421
#, no-wrap
msgid "Numeric Arguments"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Specifying numeric arguments, repeat counts."
msgstr ""

#. type: node
#: ./rluser.texi:1092 ./rluser.texi:1444
#, no-wrap
msgid "Commands For Completion"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Getting Readline to do the typing for you."
msgstr ""

#. type: subsection
#: ./rluser.texi:1092 ./rluser.texi:1559 ./rluser.texi:1560
#, no-wrap
msgid "Keyboard Macros"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Saving and re-executing typed characters"
msgstr ""

#. type: node
#: ./rluser.texi:1092 ./rluser.texi:1580
#, no-wrap
msgid "Miscellaneous Commands"
msgstr ""

#. type: menuentry
#: ./rluser.texi:1092
msgid "Other miscellaneous commands."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1096
msgid "This section describes Readline commands that may be bound to key sequences."
msgstr ""

#. type: ifset
#: ./rluser.texi:1100
msgid ""
"You can list your key bindings by executing @w{@code{bind -P}} or, for a "
"more terse format, suitable for an @var{inputrc} file, @w{@code{bind -p}}.  "
"(@xref{Bash Builtins}.)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1102
msgid "Command names without an accompanying key sequence are unbound by default."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1107
msgid ""
"In the following descriptions, @dfn{point} refers to the current cursor "
"position, and @dfn{mark} refers to a cursor position saved by the "
"@code{set-mark} command.  The text between the point and mark is referred to "
"as the @dfn{region}."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1111 ./rluser.texi:1154 ./rluser.texi:1262 ./rluser.texi:1349 ./rluser.texi:1424 ./rluser.texi:1448 ./rluser.texi:1562 ./rluser.texi:1583
msgid "@ftable @code"
msgstr ""

#. type: item
#: ./rluser.texi:1111
#, no-wrap
msgid "beginning-of-line (C-a)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1113
msgid "Move to the start of the current line."
msgstr ""

#. type: item
#: ./rluser.texi:1114
#, no-wrap
msgid "end-of-line (C-e)"
msgstr ""

#. type: item
#: ./rluser.texi:1117
#, no-wrap
msgid "forward-char (C-f)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1119
msgid "Move forward a character."
msgstr ""

#. type: item
#: ./rluser.texi:1120
#, no-wrap
msgid "backward-char (C-b)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1122
msgid "Move back a character."
msgstr ""

#. type: item
#: ./rluser.texi:1123
#, no-wrap
msgid "forward-word (M-f)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1126
msgid ""
"Move forward to the end of the next word.  Words are composed of letters and "
"digits."
msgstr ""

#. type: item
#: ./rluser.texi:1127
#, no-wrap
msgid "backward-word (M-b)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1130
msgid ""
"Move back to the start of the current or previous word.  Words are composed "
"of letters and digits."
msgstr ""

#. type: item
#: ./rluser.texi:1132
#, no-wrap
msgid "shell-forward-word ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1135
msgid ""
"Move forward to the end of the next word.  Words are delimited by non-quoted "
"shell metacharacters."
msgstr ""

#. type: item
#: ./rluser.texi:1136
#, no-wrap
msgid "shell-backward-word ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1139
msgid ""
"Move back to the start of the current or previous word.  Words are delimited "
"by non-quoted shell metacharacters."
msgstr ""

#. type: item
#: ./rluser.texi:1141
#, no-wrap
msgid "clear-screen (C-l)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1144
msgid ""
"Clear the screen and redraw the current line, leaving the current line at "
"the top of the screen."
msgstr ""

#. type: item
#: ./rluser.texi:1145
#, no-wrap
msgid "redraw-current-line ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1147
msgid "Refresh the current line.  By default, this is unbound."
msgstr ""

#. type: subsection
#: ./rluser.texi:1151
#, no-wrap
msgid "Commands For Manipulating The History"
msgstr ""

#. type: item
#: ./rluser.texi:1154
#, no-wrap
msgid "accept-line (Newline or Return)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1162
msgid ""
"Accept the line regardless of where the cursor is.  If this line is "
"non-empty, add it to the history list according to the setting of the "
"@env{HISTCONTROL} and @env{HISTIGNORE} variables.  If this line is a "
"modified history line, then restore the history line to its original state."
msgstr ""

#. type: ifclear
#: ./rluser.texi:1170
msgid ""
"Accept the line regardless of where the cursor is.  If this line is "
"non-empty, it may be added to the history list for future recall with "
"@code{add_history()}.  If this line is a modified history line, the history "
"line is restored to its original state."
msgstr ""

#. type: item
#: ./rluser.texi:1172
#, no-wrap
msgid "previous-history (C-p)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1174
msgid "Move `back' through the history list, fetching the previous command."
msgstr ""

#. type: item
#: ./rluser.texi:1175
#, no-wrap
msgid "next-history (C-n)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1177
msgid "Move `forward' through the history list, fetching the next command."
msgstr ""

#. type: item
#: ./rluser.texi:1178
#, no-wrap
msgid "beginning-of-history (M-<)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1180
msgid "Move to the first line in the history."
msgstr ""

#. type: item
#: ./rluser.texi:1181
#, no-wrap
msgid "end-of-history (M->)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1184
msgid ""
"Move to the end of the input history, i.e., the line currently being "
"entered."
msgstr ""

#. type: item
#: ./rluser.texi:1185
#, no-wrap
msgid "reverse-search-history (C-r)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1188
msgid ""
"Search backward starting at the current line and moving `up' through the "
"history as necessary.  This is an incremental search."
msgstr ""

#. type: item
#: ./rluser.texi:1189
#, no-wrap
msgid "forward-search-history (C-s)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1192
msgid ""
"Search forward starting at the current line and moving `down' through the "
"history as necessary.  This is an incremental search."
msgstr ""

#. type: item
#: ./rluser.texi:1193
#, no-wrap
msgid "non-incremental-reverse-search-history (M-p)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1198
msgid ""
"Search backward starting at the current line and moving `up' through the "
"history as necessary using a non-incremental search for a string supplied by "
"the user.  The search string may match anywhere in a history line."
msgstr ""

#. type: item
#: ./rluser.texi:1199
#, no-wrap
msgid "non-incremental-forward-search-history (M-n)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1204
msgid ""
"Search forward starting at the current line and moving `down' through the "
"history as necessary using a non-incremental search for a string supplied by "
"the user.  The search string may match anywhere in a history line."
msgstr ""

#. type: item
#: ./rluser.texi:1205
#, no-wrap
msgid "history-search-forward ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1211
msgid ""
"Search forward through the history for the string of characters between the "
"start of the current line and the point.  The search string must match at "
"the beginning of a history line.  This is a non-incremental search.  By "
"default, this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1212
#, no-wrap
msgid "history-search-backward ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1218
msgid ""
"Search backward through the history for the string of characters between the "
"start of the current line and the point.  The search string must match at "
"the beginning of a history line.  This is a non-incremental search.  By "
"default, this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1219
#, no-wrap
msgid "history-substr-search-forward ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1225
msgid ""
"Search forward through the history for the string of characters between the "
"start of the current line and the point.  The search string may match "
"anywhere in a history line.  This is a non-incremental search.  By default, "
"this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1226
#, no-wrap
msgid "history-substr-search-backward ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1232
msgid ""
"Search backward through the history for the string of characters between the "
"start of the current line and the point.  The search string may match "
"anywhere in a history line.  This is a non-incremental search.  By default, "
"this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1233
#, no-wrap
msgid "yank-nth-arg (M-C-y)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1242
msgid ""
"Insert the first argument to the previous command (usually the second word "
"on the previous line) at point.  With an argument @var{n}, insert the "
"@var{n}th word from the previous command (the words in the previous command "
"begin with word 0).  A negative argument inserts the @var{n}th word from the "
"end of the previous command.  Once the argument @var{n} is computed, the "
"argument is extracted as if the @samp{!@var{n}} history expansion had been "
"specified."
msgstr ""

#. type: item
#: ./rluser.texi:1243
#, no-wrap
msgid "yank-last-arg (M-. or M-_)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1255
msgid ""
"Insert last argument to the previous command (the last word of the previous "
"history entry).  With a numeric argument, behave exactly like "
"@code{yank-nth-arg}.  Successive calls to @code{yank-last-arg} move back "
"through the history list, inserting the last word (or the word specified by "
"the argument to the first call) of each line in turn.  Any numeric argument "
"supplied to these successive calls determines the direction to move through "
"the history.  A negative argument switches the direction through the history "
"(back or forward).  The history expansion facilities are used to extract the "
"last argument, as if the @samp{!$} history expansion had been specified."
msgstr ""

#. type: subsection
#: ./rluser.texi:1259
#, no-wrap
msgid "Commands For Changing Text"
msgstr ""

#. type: item
#: ./rluser.texi:1263
#, no-wrap
msgid "@i{end-of-file} (usually C-d)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1268
msgid ""
"The character indicating end-of-file as set, for example, by @code{stty}.  "
"If this character is read when there are no characters on the line, and "
"point is at the beginning of the line, Readline interprets it as the end of "
"input and returns @sc{eof}."
msgstr ""

#. type: item
#: ./rluser.texi:1269
#, no-wrap
msgid "delete-char (C-d)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1273
msgid ""
"Delete the character at point.  If this function is bound to the same "
"character as the tty @sc{eof} character, as @kbd{C-d} commonly is, see above "
"for the effects."
msgstr ""

#. type: item
#: ./rluser.texi:1274
#, no-wrap
msgid "backward-delete-char (Rubout)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1277
msgid ""
"Delete the character behind the cursor.  A numeric argument means to kill "
"the characters instead of deleting them."
msgstr ""

#. type: item
#: ./rluser.texi:1278
#, no-wrap
msgid "forward-backward-delete-char ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1282
msgid ""
"Delete the character under the cursor, unless the cursor is at the end of "
"the line, in which case the character behind the cursor is deleted.  By "
"default, this is not bound to a key."
msgstr ""

#. type: item
#: ./rluser.texi:1283
#, no-wrap
msgid "quoted-insert (C-q or C-v)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1286
msgid ""
"Add the next character typed to the line verbatim.  This is how to insert "
"key sequences like @kbd{C-q}, for example."
msgstr ""

#. type: item
#: ./rluser.texi:1288
#, no-wrap
msgid "tab-insert (M-@key{TAB})"
msgstr ""

#. type: ifclear
#: ./rluser.texi:1290
msgid "Insert a tab character."
msgstr ""

#. type: item
#: ./rluser.texi:1292
#, no-wrap
msgid "self-insert (a, b, A, 1, !, @dots{})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1294
msgid "Insert yourself."
msgstr ""

#. type: item
#: ./rluser.texi:1295
#, no-wrap
msgid "bracketed-paste-begin ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1302
msgid ""
"This function is intended to be bound to the \"bracketed paste\" escape "
"sequence sent by some terminals, and such a binding is assigned by default.  "
"It allows Readline to insert the pasted text as a single unit without "
"treating each character as if it had been read from the keyboard.  The "
"characters are inserted as if each one was bound to @code{self-insert}) "
"instead of executing any editing commands."
msgstr ""

#. type: item
#: ./rluser.texi:1303
#, no-wrap
msgid "transpose-chars (C-t)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1310
msgid ""
"Drag the character before the cursor forward over the character at the "
"cursor, moving the cursor forward as well.  If the insertion point is at the "
"end of the line, then this transposes the last two characters of the line.  "
"Negative arguments have no effect."
msgstr ""

#. type: item
#: ./rluser.texi:1311
#, no-wrap
msgid "transpose-words (M-t)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1316
msgid ""
"Drag the word before point past the word after point, moving point past that "
"word as well.  If the insertion point is at the end of the line, this "
"transposes the last two words on the line."
msgstr ""

#. type: item
#: ./rluser.texi:1317
#, no-wrap
msgid "upcase-word (M-u)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1320
msgid ""
"Uppercase the current (or following) word.  With a negative argument, "
"uppercase the previous word, but do not move the cursor."
msgstr ""

#. type: item
#: ./rluser.texi:1321
#, no-wrap
msgid "downcase-word (M-l)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1324
msgid ""
"Lowercase the current (or following) word.  With a negative argument, "
"lowercase the previous word, but do not move the cursor."
msgstr ""

#. type: item
#: ./rluser.texi:1325
#, no-wrap
msgid "capitalize-word (M-c)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1328
msgid ""
"Capitalize the current (or following) word.  With a negative argument, "
"capitalize the previous word, but do not move the cursor."
msgstr ""

#. type: item
#: ./rluser.texi:1329
#, no-wrap
msgid "overwrite-mode ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1335
msgid ""
"Toggle overwrite mode.  With an explicit positive numeric argument, switches "
"to overwrite mode.  With an explicit non-positive numeric argument, switches "
"to insert mode.  This command affects only @code{emacs} mode; @code{vi} mode "
"does overwrite differently.  Each call to @code{readline()} starts in insert "
"mode."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1340
msgid ""
"In overwrite mode, characters bound to @code{self-insert} replace the text "
"at point rather than pushing the text to the right.  Characters bound to "
"@code{backward-delete-char} replace the character before point with a space."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1342
msgid "By default, this command is unbound."
msgstr ""

#. type: subsection
#: ./rluser.texi:1346
#, no-wrap
msgid "Killing And Yanking"
msgstr ""

#. type: item
#: ./rluser.texi:1350
#, no-wrap
msgid "kill-line (C-k)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1352
msgid "Kill the text from point to the end of the line."
msgstr ""

#. type: item
#: ./rluser.texi:1353
#, no-wrap
msgid "backward-kill-line (C-x Rubout)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1355 ./rluser.texi:1358
msgid "Kill backward from the cursor to the beginning of the current line."
msgstr ""

#. type: item
#: ./rluser.texi:1356
#, no-wrap
msgid "unix-line-discard (C-u)"
msgstr ""

#. type: item
#: ./rluser.texi:1359
#, no-wrap
msgid "kill-whole-line ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1362
msgid ""
"Kill all characters on the current line, no matter where point is.  By "
"default, this is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1363
#, no-wrap
msgid "kill-word (M-d)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1367
msgid ""
"Kill from point to the end of the current word, or if between words, to the "
"end of the next word.  Word boundaries are the same as @code{forward-word}."
msgstr ""

#. type: item
#: ./rluser.texi:1368
#, no-wrap
msgid "backward-kill-word (M-@key{DEL})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1371
msgid ""
"Kill the word behind point.  Word boundaries are the same as "
"@code{backward-word}."
msgstr ""

#. type: item
#: ./rluser.texi:1373
#, no-wrap
msgid "shell-kill-word ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1377
msgid ""
"Kill from point to the end of the current word, or if between words, to the "
"end of the next word.  Word boundaries are the same as "
"@code{shell-forward-word}."
msgstr ""

#. type: item
#: ./rluser.texi:1378
#, no-wrap
msgid "shell-backward-kill-word ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1381
msgid ""
"Kill the word behind point.  Word boundaries are the same as "
"@code{shell-backward-word}."
msgstr ""

#. type: item
#: ./rluser.texi:1383
#, no-wrap
msgid "unix-word-rubout (C-w)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1386
msgid ""
"Kill the word behind point, using white space as a word boundary.  The "
"killed text is saved on the kill-ring."
msgstr ""

#. type: item
#: ./rluser.texi:1387
#, no-wrap
msgid "unix-filename-rubout ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1391
msgid ""
"Kill the word behind point, using white space and the slash character as the "
"word boundaries.  The killed text is saved on the kill-ring."
msgstr ""

#. type: item
#: ./rluser.texi:1392
#, no-wrap
msgid "delete-horizontal-space ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1394
msgid "Delete all spaces and tabs around point.  By default, this is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1395
#, no-wrap
msgid "kill-region ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1398
msgid "Kill the text in the current region.  By default, this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1399
#, no-wrap
msgid "copy-region-as-kill ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1402
msgid ""
"Copy the text in the region to the kill buffer, so it can be yanked right "
"away.  By default, this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1403
#, no-wrap
msgid "copy-backward-word ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1407
msgid ""
"Copy the word before point to the kill buffer.  The word boundaries are the "
"same as @code{backward-word}.  By default, this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1408
#, no-wrap
msgid "copy-forward-word ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1412
msgid ""
"Copy the word following point to the kill buffer.  The word boundaries are "
"the same as @code{forward-word}.  By default, this command is unbound."
msgstr ""

#. type: item
#: ./rluser.texi:1413
#, no-wrap
msgid "yank (C-y)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1415
msgid "Yank the top of the kill ring into the buffer at point."
msgstr ""

#. type: item
#: ./rluser.texi:1416
#, no-wrap
msgid "yank-pop (M-y)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1419
msgid ""
"Rotate the kill-ring, and yank the new top.  You can only do this if the "
"prior command is @code{yank} or @code{yank-pop}."
msgstr ""

#. type: subsection
#: ./rluser.texi:1422
#, no-wrap
msgid "Specifying Numeric Arguments"
msgstr ""

#. type: item
#: ./rluser.texi:1425
#, no-wrap
msgid "digit-argument (@kbd{M-0}, @kbd{M-1}, @dots{} @kbd{M--})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1428
msgid ""
"Add this digit to the argument already accumulating, or start a new "
"argument.  @kbd{M--} starts a negative argument."
msgstr ""

#. type: item
#: ./rluser.texi:1429
#, no-wrap
msgid "universal-argument ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1442
msgid ""
"This is another way to specify an argument.  If this command is followed by "
"one or more digits, optionally with a leading minus sign, those digits "
"define the argument.  If the command is followed by digits, executing "
"@code{universal-argument} again ends the numeric argument, but is otherwise "
"ignored.  As a special case, if this command is immediately followed by a "
"character that is neither a digit nor minus sign, the argument count for the "
"next command is multiplied by four.  The argument count is initially one, so "
"executing this function the first time makes the argument count four, a "
"second time makes the argument count sixteen, and so on.  By default, this "
"is not bound to a key."
msgstr ""

#. type: subsection
#: ./rluser.texi:1445
#, no-wrap
msgid "Letting Readline Type For You"
msgstr ""

#. type: item
#: ./rluser.texi:1448
#, no-wrap
msgid "complete (@key{TAB})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1451
msgid ""
"Attempt to perform completion on the text before point.  The actual "
"completion performed is application-specific."
msgstr ""

#. type: ifset
#: ./rluser.texi:1457
msgid ""
"Bash attempts completion treating the text as a variable (if the text begins "
"with @samp{$}), username (if the text begins with @samp{~}), hostname (if "
"the text begins with @samp{@@}), or command (including aliases and "
"functions) in turn.  If none of these produces a match, filename completion "
"is attempted."
msgstr ""

#. type: ifclear
#: ./rluser.texi:1460
msgid "The default is filename completion."
msgstr ""

#. type: item
#: ./rluser.texi:1462
#, no-wrap
msgid "possible-completions (M-?)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1467
msgid ""
"List the possible completions of the text before point.  When displaying "
"completions, Readline sets the number of columns used for display to the "
"value of @code{completion-display-width}, the value of the environment "
"variable @env{COLUMNS}, or the screen width, in that order."
msgstr ""

#. type: item
#: ./rluser.texi:1468
#, no-wrap
msgid "insert-completions (M-*)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1471
msgid ""
"Insert all completions of the text before point that would have been "
"generated by @code{possible-completions}."
msgstr ""

#. type: item
#: ./rluser.texi:1472
#, no-wrap
msgid "menu-complete ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1485
msgid ""
"Similar to @code{complete}, but replaces the word to be completed with a "
"single match from the list of possible completions.  Repeated execution of "
"@code{menu-complete} steps through the list of possible completions, "
"inserting each match in turn.  At the end of the list of completions, the "
"bell is rung (subject to the setting of @code{bell-style})  and the original "
"text is restored.  An argument of @var{n} moves @var{n} positions forward in "
"the list of matches; a negative argument may be used to move backward "
"through the list.  This command is intended to be bound to @key{TAB}, but is "
"unbound by default."
msgstr ""

#. type: item
#: ./rluser.texi:1486
#, no-wrap
msgid "menu-complete-backward ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1490
msgid ""
"Identical to @code{menu-complete}, but moves backward through the list of "
"possible completions, as if @code{menu-complete} had been given a negative "
"argument."
msgstr ""

#. type: item
#: ./rluser.texi:1491
#, no-wrap
msgid "delete-char-or-list ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1497
msgid ""
"Deletes the character under the cursor if not at the beginning or end of the "
"line (like @code{delete-char}).  If at the end of the line, behaves "
"identically to @code{possible-completions}.  This command is unbound by "
"default."
msgstr ""

#. type: item
#: ./rluser.texi:1499
#, no-wrap
msgid "complete-filename (M-/)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1501
msgid "Attempt filename completion on the text before point."
msgstr ""

#. type: item
#: ./rluser.texi:1502
#, no-wrap
msgid "possible-filename-completions (C-x /)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1505
msgid ""
"List the possible completions of the text before point, treating it as a "
"filename."
msgstr ""

#. type: item
#: ./rluser.texi:1506
#, no-wrap
msgid "complete-username (M-~)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1509
msgid "Attempt completion on the text before point, treating it as a username."
msgstr ""

#. type: item
#: ./rluser.texi:1510
#, no-wrap
msgid "possible-username-completions (C-x ~)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1513
msgid ""
"List the possible completions of the text before point, treating it as a "
"username."
msgstr ""

#. type: item
#: ./rluser.texi:1514
#, no-wrap
msgid "complete-variable (M-$)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1517
msgid ""
"Attempt completion on the text before point, treating it as a shell "
"variable."
msgstr ""

#. type: item
#: ./rluser.texi:1518
#, no-wrap
msgid "possible-variable-completions (C-x $)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1521
msgid ""
"List the possible completions of the text before point, treating it as a "
"shell variable."
msgstr ""

#. type: item
#: ./rluser.texi:1522
#, no-wrap
msgid "complete-hostname (M-@@)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1525
msgid "Attempt completion on the text before point, treating it as a hostname."
msgstr ""

#. type: item
#: ./rluser.texi:1526
#, no-wrap
msgid "possible-hostname-completions (C-x @@)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1529
msgid ""
"List the possible completions of the text before point, treating it as a "
"hostname."
msgstr ""

#. type: item
#: ./rluser.texi:1530
#, no-wrap
msgid "complete-command (M-!)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1536
msgid ""
"Attempt completion on the text before point, treating it as a command name.  "
"Command completion attempts to match the text against aliases, reserved "
"words, shell functions, shell builtins, and finally executable filenames, in "
"that order."
msgstr ""

#. type: item
#: ./rluser.texi:1537
#, no-wrap
msgid "possible-command-completions (C-x !)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1540
msgid ""
"List the possible completions of the text before point, treating it as a "
"command name."
msgstr ""

#. type: item
#: ./rluser.texi:1541
#, no-wrap
msgid "dynamic-complete-history (M-@key{TAB})"
msgstr ""

#. type: ifset
#: ./rluser.texi:1545
msgid ""
"Attempt completion on the text before point, comparing the text against "
"lines from the history list for possible completion matches."
msgstr ""

#. type: item
#: ./rluser.texi:1546
#, no-wrap
msgid "dabbrev-expand ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1550
msgid ""
"Attempt menu completion on the text before point, comparing the text against "
"lines from the history list for possible completion matches."
msgstr ""

#. type: item
#: ./rluser.texi:1551
#, no-wrap
msgid "complete-into-braces (M-@{)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1555
msgid ""
"Perform filename completion and insert the list of possible completions "
"enclosed within braces so the list is available to the shell (@pxref{Brace "
"Expansion})."
msgstr ""

#. type: item
#: ./rluser.texi:1563
#, no-wrap
msgid "start-kbd-macro (C-x ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1565
msgid "Begin saving the characters typed into the current keyboard macro."
msgstr ""

#. type: item
#: ./rluser.texi:1566
#, no-wrap
msgid "end-kbd-macro (C-x ))"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1569
msgid ""
"Stop saving the characters typed into the current keyboard macro and save "
"the definition."
msgstr ""

#. type: item
#: ./rluser.texi:1570
#, no-wrap
msgid "call-last-kbd-macro (C-x e)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1573
msgid ""
"Re-execute the last keyboard macro defined, by making the characters in the "
"macro appear as if typed at the keyboard."
msgstr ""

#. type: item
#: ./rluser.texi:1574
#, no-wrap
msgid "print-last-kbd-macro ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1577
msgid ""
"Print the last keboard macro defined in a format suitable for the "
"@var{inputrc} file."
msgstr ""

#. type: subsection
#: ./rluser.texi:1581
#, no-wrap
msgid "Some Miscellaneous Commands"
msgstr ""

#. type: item
#: ./rluser.texi:1584
#, no-wrap
msgid "re-read-init-file (C-x C-r)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1587
msgid ""
"Read in the contents of the @var{inputrc} file, and incorporate any bindings "
"or variable assignments found there."
msgstr ""

#. type: item
#: ./rluser.texi:1588
#, no-wrap
msgid "abort (C-g)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1592
msgid ""
"Abort the current editing command and ring the terminal's bell (subject to "
"the setting of @code{bell-style})."
msgstr ""

#. type: item
#: ./rluser.texi:1593
#, no-wrap
msgid "do-uppercase-version (M-a, M-b, M-@var{x}, @dots{})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1596
msgid ""
"If the metafied character @var{x} is lowercase, run the command that is "
"bound to the corresponding uppercase character."
msgstr ""

#. type: item
#: ./rluser.texi:1597
#, no-wrap
msgid "prefix-meta (@key{ESC})"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1601
msgid ""
"Metafy the next character typed.  This is for keyboards without a meta key.  "
"Typing @samp{@key{ESC} f} is equivalent to typing @kbd{M-f}."
msgstr ""

#. type: item
#: ./rluser.texi:1602
#, no-wrap
msgid "undo (C-_ or C-x C-u)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1604
msgid "Incremental undo, separately remembered for each line."
msgstr ""

#. type: item
#: ./rluser.texi:1605
#, no-wrap
msgid "revert-line (M-r)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1608
msgid ""
"Undo all changes made to this line.  This is like executing the @code{undo} "
"command enough times to get back to the beginning."
msgstr ""

#. type: item
#: ./rluser.texi:1610
#, no-wrap
msgid "tilde-expand (M-&)"
msgstr ""

#. type: item
#: ./rluser.texi:1613
#, no-wrap
msgid "tilde-expand (M-~)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1616
msgid "Perform tilde expansion on the current word."
msgstr ""

#. type: item
#: ./rluser.texi:1617
#, no-wrap
msgid "set-mark (C-@@)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1620
msgid ""
"Set the mark to the point.  If a numeric argument is supplied, the mark is "
"set to that position."
msgstr ""

#. type: item
#: ./rluser.texi:1621
#, no-wrap
msgid "exchange-point-and-mark (C-x C-x)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1624
msgid ""
"Swap the point with the mark.  The current cursor position is set to the "
"saved position, and the old cursor position is saved as the mark."
msgstr ""

#. type: item
#: ./rluser.texi:1625
#, no-wrap
msgid "character-search (C-])"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1628
msgid ""
"A character is read and point is moved to the next occurrence of that "
"character.  A negative count searches for previous occurrences."
msgstr ""

#. type: item
#: ./rluser.texi:1629
#, no-wrap
msgid "character-search-backward (M-C-])"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1633
msgid ""
"A character is read and point is moved to the previous occurrence of that "
"character.  A negative count searches for subsequent occurrences."
msgstr ""

#. type: item
#: ./rluser.texi:1634
#, no-wrap
msgid "skip-csi-sequence ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1642
msgid ""
"Read enough characters to consume a multi-key sequence such as those defined "
"for keys like Home and End.  Such sequences begin with a Control Sequence "
"Indicator (CSI), usually ESC-[.  If this sequence is bound to \"\\e[\", keys "
"producing such sequences will have no effect unless explicitly bound to a "
"readline command, instead of inserting stray characters into the editing "
"buffer.  This is unbound by default, but usually bound to ESC-[."
msgstr ""

#. type: item
#: ./rluser.texi:1643
#, no-wrap
msgid "insert-comment (M-#)"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1652
msgid ""
"Without a numeric argument, the value of the @code{comment-begin} variable "
"is inserted at the beginning of the current line.  If a numeric argument is "
"supplied, this command acts as a toggle: if the characters at the beginning "
"of the line do not match the value of @code{comment-begin}, the value is "
"inserted, otherwise the characters in @code{comment-begin} are deleted from "
"the beginning of the line.  In either case, the line is accepted as if a "
"newline had been typed."
msgstr ""

#. type: ifset
#: ./rluser.texi:1657
msgid ""
"The default value of @code{comment-begin} causes this command to make the "
"current line a shell comment.  If a numeric argument causes the comment "
"character to be removed, the line will be executed by the shell."
msgstr ""

#. type: item
#: ./rluser.texi:1659
#, no-wrap
msgid "dump-functions ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1664
msgid ""
"Print all of the functions and their key bindings to the Readline output "
"stream.  If a numeric argument is supplied, the output is formatted in such "
"a way that it can be made part of an @var{inputrc} file.  This command is "
"unbound by default."
msgstr ""

#. type: item
#: ./rluser.texi:1665
#, no-wrap
msgid "dump-variables ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1670
msgid ""
"Print all of the settable variables and their values to the Readline output "
"stream.  If a numeric argument is supplied, the output is formatted in such "
"a way that it can be made part of an @var{inputrc} file.  This command is "
"unbound by default."
msgstr ""

#. type: item
#: ./rluser.texi:1671
#, no-wrap
msgid "dump-macros ()"
msgstr ""

#. type: Plain text
#: ./rluser.texi:1676
msgid ""
"Print all of the Readline key sequences bound to macros and the strings they "
"output.  If a numeric argument is supplied, the output is formatted in such "
"a way that it can be made part of an @var{inputrc} file.  This command is "
"unbound by default."
msgstr ""

#. type: item
#: ./rluser.texi:1678
#, no-wrap
msgid "glob-complete-word (M-g)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1682
msgid ""
"The word before point is treated as a pattern for pathname expansion, with "
"an asterisk implicitly appended.  This pattern is used to generate a list of "
"matching file names for possible completions."
msgstr ""

#. type: item
#: ./rluser.texi:1683
#, no-wrap
msgid "glob-expand-word (C-x *)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1688
msgid ""
"The word before point is treated as a pattern for pathname expansion, and "
"the list of matching file names is inserted, replacing the word.  If a "
"numeric argument is supplied, a @samp{*} is appended before pathname "
"expansion."
msgstr ""

#. type: item
#: ./rluser.texi:1689
#, no-wrap
msgid "glob-list-expansions (C-x g)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1694
msgid ""
"The list of expansions that would have been generated by "
"@code{glob-expand-word} is displayed, and the line is redrawn.  If a numeric "
"argument is supplied, a @samp{*} is appended before pathname expansion."
msgstr ""

#. type: item
#: ./rluser.texi:1695
#, no-wrap
msgid "display-shell-version (C-x C-v)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1697
msgid "Display version information about the current instance of Bash."
msgstr ""

#. type: item
#: ./rluser.texi:1698
#, no-wrap
msgid "shell-expand-line (M-C-e)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1702
msgid ""
"Expand the line as the shell does.  This performs alias and history "
"expansion as well as all of the shell word expansions (@pxref{Shell "
"Expansions})."
msgstr ""

#. type: item
#: ./rluser.texi:1703
#, no-wrap
msgid "history-expand-line (M-^)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1705
msgid "Perform history expansion on the current line."
msgstr ""

#. type: item
#: ./rluser.texi:1706
#, no-wrap
msgid "magic-space ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1709
msgid ""
"Perform history expansion on the current line and insert a space "
"(@pxref{History Interaction})."
msgstr ""

#. type: item
#: ./rluser.texi:1710
#, no-wrap
msgid "alias-expand-line ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1712
msgid "Perform alias expansion on the current line (@pxref{Aliases})."
msgstr ""

#. type: item
#: ./rluser.texi:1713
#, no-wrap
msgid "history-and-alias-expand-line ()"
msgstr ""

#. type: ifset
#: ./rluser.texi:1715
msgid "Perform history and alias expansion on the current line."
msgstr ""

#. type: item
#: ./rluser.texi:1716
#, no-wrap
msgid "insert-last-argument (M-. or M-_)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1718
msgid "A synonym for @code{yank-last-arg}."
msgstr ""

#. type: item
#: ./rluser.texi:1719
#, no-wrap
msgid "operate-and-get-next (C-o)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1723
msgid ""
"Accept the current line for execution and fetch the next line relative to "
"the current line from the history for editing.  Any argument is ignored."
msgstr ""

#. type: item
#: ./rluser.texi:1724
#, no-wrap
msgid "edit-and-execute-command (C-xC-e)"
msgstr ""

#. type: ifset
#: ./rluser.texi:1730
msgid ""
"Invoke an editor on the current command line, and execute the result as "
"shell commands.  Bash attempts to invoke @code{$VISUAL}, @code{$EDITOR}, and "
"@code{emacs} as the editor, in that order."
msgstr ""

#. type: item
#: ./rluser.texi:1734
#, no-wrap
msgid "emacs-editing-mode (C-e)"
msgstr ""

#. type: ifclear
#: ./rluser.texi:1737
msgid ""
"When in @code{vi} command mode, this causes a switch to @code{emacs} editing "
"mode."
msgstr ""

#. type: item
#: ./rluser.texi:1738
#, no-wrap
msgid "vi-editing-mode (M-C-j)"
msgstr ""

#. type: ifclear
#: ./rluser.texi:1741
msgid ""
"When in @code{emacs} editing mode, this causes a switch to @code{vi} editing "
"mode."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1753
msgid ""
"While the Readline library does not have a full set of @code{vi} editing "
"functions, it does contain enough to allow simple editing of the line.  The "
"Readline @code{vi} mode behaves as specified in the @sc{posix} standard."
msgstr ""

#. type: ifset
#: ./rluser.texi:1758
msgid ""
"In order to switch interactively between @code{emacs} and @code{vi} editing "
"modes, use the @samp{set -o emacs} and @samp{set -o vi} commands (@pxref{The "
"Set Builtin})."
msgstr ""

#. type: ifclear
#: ./rluser.texi:1763
msgid ""
"In order to switch interactively between @code{emacs} and @code{vi} editing "
"modes, use the command @kbd{M-C-j} (bound to emacs-editing-mode when in "
"@code{vi} mode and to vi-editing-mode in @code{emacs} mode)."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1765
msgid "The Readline default is @code{emacs} mode."
msgstr ""

#. type: Plain text
#: ./rluser.texi:1772
msgid ""
"When you enter a line in @code{vi} mode, you are already placed in "
"`insertion' mode, as if you had typed an @samp{i}.  Pressing @key{ESC} "
"switches you into `command' mode, where you can edit the text of the line "
"with the standard @code{vi} movement keys, move to previous history lines "
"with @samp{k} and subsequent lines with @samp{j}, and so forth."
msgstr ""

#. type: section
#: ./rluser.texi:1774 ./rluser.texi:1775
#, no-wrap
msgid "Programmable Completion"
msgstr ""

#. type: cindex
#: ./rluser.texi:1776
#, no-wrap
msgid "programmable completion"
msgstr ""

#. type: ifset
#: ./rluser.texi:1782
msgid ""
"When word completion is attempted for an argument to a command for which a "
"completion specification (a @var{compspec}) has been defined using the "
"@code{complete} builtin (@pxref{Programmable Completion Builtins}), the "
"programmable completion facilities are invoked."
msgstr ""

#. type: ifset
#: ./rluser.texi:1795
msgid ""
"First, the command name is identified.  If a compspec has been defined for "
"that command, the compspec is used to generate the list of possible "
"completions for the word.  If the command word is the empty string "
"(completion attempted at the beginning of an empty line), any compspec "
"defined with the @option{-E} option to @code{complete} is used.  If the "
"command word is a full pathname, a compspec for the full pathname is "
"searched for first.  If no compspec is found for the full pathname, an "
"attempt is made to find a compspec for the portion following the final "
"slash.  If those searches do not result in a compspec, any compspec defined "
"with the @option{-D} option to @code{complete} is used as the default."
msgstr ""

#. type: ifset
#: ./rluser.texi:1800
msgid ""
"Once a compspec has been found, it is used to generate the list of matching "
"words.  If a compspec is not found, the default Bash completion described "
"above (@pxref{Commands For Completion}) is performed."
msgstr ""

#. type: ifset
#: ./rluser.texi:1808
msgid ""
"First, the actions specified by the compspec are used.  Only matches which "
"are prefixed by the word being completed are returned.  When the @option{-f} "
"or @option{-d} option is used for filename or directory name completion, the "
"shell variable @env{FIGNORE} is used to filter the matches.  @xref{Bash "
"Variables}, for a description of @env{FIGNORE}."
msgstr ""

#. type: ifset
#: ./rluser.texi:1814
msgid ""
"Any completions specified by a filename expansion pattern to the @option{-G} "
"option are generated next.  The words generated by the pattern need not "
"match the word being completed.  The @env{GLOBIGNORE} shell variable is not "
"used to filter the matches, but the @env{FIGNORE} shell variable is used."
msgstr ""

#. type: ifset
#: ./rluser.texi:1828
msgid ""
"Next, the string specified as the argument to the @option{-W} option is "
"considered.  The string is first split using the characters in the @env{IFS} "
"special variable as delimiters.  Shell quoting is honored.  Each word is "
"then expanded using brace expansion, tilde expansion, parameter and variable "
"expansion, command substitution, and arithmetic expansion, as described "
"above (@pxref{Shell Expansions}).  The results are split using the rules "
"described above (@pxref{Word Splitting}).  The results of the expansion are "
"prefix-matched against the word being completed, and the matching words "
"become the possible completions."
msgstr ""

#. type: ifset
#: ./rluser.texi:1844
msgid ""
"After these matches have been generated, any shell function or command "
"specified with the @option{-F} and @option{-C} options is invoked.  When the "
"command or function is invoked, the @env{COMP_LINE}, @env{COMP_POINT}, "
"@env{COMP_KEY}, and @env{COMP_TYPE} variables are assigned values as "
"described above (@pxref{Bash Variables}).  If a shell function is being "
"invoked, the @env{COMP_WORDS} and @env{COMP_CWORD} variables are also set.  "
"When the function or command is invoked, the first argument ($1) is the name "
"of the command whose arguments are being completed, the second argument ($2) "
"is the word being completed, and the third argument ($3) is the word "
"preceding the word being completed on the current command line.  No "
"filtering of the generated completions against the word being completed is "
"performed; the function or command has complete freedom in generating the "
"matches."
msgstr ""

#. type: ifset
#: ./rluser.texi:1851
msgid ""
"Any function specified with @option{-F} is invoked first.  The function may "
"use any of the shell facilities, including the @code{compgen} and "
"@code{compopt} builtins described below (@pxref{Programmable Completion "
"Builtins}), to generate the matches.  It must put the possible completions "
"in the @env{COMPREPLY} array variable, one per array element."
msgstr ""

#. type: ifset
#: ./rluser.texi:1857
msgid ""
"Next, any command specified with the @option{-C} option is invoked in an "
"environment equivalent to command substitution.  It should print a list of "
"completions, one per line, to the standard output.  Backslash may be used to "
"escape a newline, if necessary."
msgstr ""

#. type: ifset
#: ./rluser.texi:1871
msgid ""
"After all of the possible completions are generated, any filter specified "
"with the @option{-X} option is applied to the list.  The filter is a pattern "
"as used for pathname expansion; a @samp{&} in the pattern is replaced with "
"the text of the word being completed.  A literal @samp{&} may be escaped "
"with a backslash; the backslash is removed before attempting a match.  Any "
"completion that matches the pattern will be removed from the list.  A "
"leading @samp{!} negates the pattern; in this case any completion not "
"matching the pattern will be removed.  If the @code{nocasematch} shell "
"option (see the description of @code{shopt} in @ref{The Shopt Builtin})  is "
"enabled, the match is performed without regard to the case of alphabetic "
"characters."
msgstr ""

#. type: ifset
#: ./rluser.texi:1876
msgid ""
"Finally, any prefix and suffix specified with the @option{-P} and "
"@option{-S} options are added to each member of the completion list, and the "
"result is returned to the Readline completion code as the list of possible "
"completions."
msgstr ""

#. type: ifset
#: ./rluser.texi:1880
msgid ""
"If the previously-applied actions do not generate any matches, and the "
"@option{-o dirnames} option was supplied to @code{complete} when the "
"compspec was defined, directory name completion is attempted."
msgstr ""

#. type: ifset
#: ./rluser.texi:1884
msgid ""
"If the @option{-o plusdirs} option was supplied to @code{complete} when the "
"compspec was defined, directory name completion is attempted and any matches "
"are added to the results of the other actions."
msgstr ""

#. type: ifset
#: ./rluser.texi:1896
msgid ""
"By default, if a compspec is found, whatever it generates is returned to the "
"completion code as the full set of possible completions.  The default Bash "
"completions are not attempted, and the Readline default of filename "
"completion is disabled.  If the @option{-o bashdefault} option was supplied "
"to @code{complete} when the compspec was defined, the default Bash "
"completions are attempted if the compspec generates no matches.  If the "
"@option{-o default} option was supplied to @code{complete} when the compspec "
"was defined, Readline's default completion will be performed if the compspec "
"(and, if attempted, the default Bash completions)  generate no matches."
msgstr ""

#. type: ifset
#: ./rluser.texi:1902
msgid ""
"When a compspec indicates that directory name completion is desired, the "
"programmable completion functions force Readline to append a slash to "
"completed names which are symbolic links to directories, subject to the "
"value of the @var{mark-directories} Readline variable, regardless of the "
"setting of the @var{mark-symlinked-directories} Readline variable."
msgstr ""

#. type: ifset
#: ./rluser.texi:1914
msgid ""
"There is some support for dynamically modifying completions.  This is most "
"useful when used in combination with a default completion specified with "
"@option{-D}.  It's possible for shell functions executed as completion "
"handlers to indicate that completion should be retried by returning an exit "
"status of 124.  If a shell function returns 124, and changes the compspec "
"associated with the command on which completion is being attempted (supplied "
"as the first argument when the function is executed), programmable "
"completion restarts from the beginning, with an attempt to find a new "
"compspec for that command.  This allows a set of completions to be built "
"dynamically as completion is attempted, rather than being loaded all at "
"once."
msgstr ""

#. type: ifset
#: ./rluser.texi:1918
msgid ""
"For instance, assuming that there is a library of compspecs, each kept in a "
"file corresponding to the name of the command, the following default "
"completion function would load completions dynamically:"
msgstr ""

#. type: example
#: ./rluser.texi:1925
#, no-wrap
msgid ""
"_completion_loader()\n"
"@{\n"
"    . \"/etc/bash_completion.d/$1.sh\" >/dev/null 2>&1 && return 124\n"
"@}\n"
"complete -D -F _completion_loader -o bashdefault -o default\n"
msgstr ""

#. type: section
#: ./rluser.texi:1927 ./rluser.texi:1928
#, no-wrap
msgid "Programmable Completion Builtins"
msgstr ""

#. type: cindex
#: ./rluser.texi:1929
#, no-wrap
msgid "completion builtins"
msgstr ""

#. type: ifset
#: ./rluser.texi:1934
msgid ""
"Three builtin commands are available to manipulate the programmable "
"completion facilities: one to specify how the arguments to a particular "
"command are to be completed, and two to modify the completion as it is "
"happening."
msgstr ""

#. type: btindex
#: ./rluser.texi:1936 ./rluser.texi:1937
#, no-wrap
msgid "compgen"
msgstr ""

#. type: example
#: ./rluser.texi:1940
#, no-wrap
msgid "@code{compgen [@var{option}] [@var{word}]}\n"
msgstr ""

#. type: table
#: ./rluser.texi:1950
msgid ""
"Generate possible completion matches for @var{word} according to the "
"@var{option}s, which may be any option accepted by the @code{complete} "
"builtin with the exception of @option{-p} and @option{-r}, and write the "
"matches to the standard output.  When using the @option{-F} or @option{-C} "
"options, the various shell variables set by the programmable completion "
"facilities, while available, will not have useful values."
msgstr ""

#. type: table
#: ./rluser.texi:1956
msgid ""
"The matches will be generated in the same way as if the programmable "
"completion code had generated them directly from a completion specification "
"with the same flags.  If @var{word} is specified, only those completions "
"matching @var{word} will be displayed."
msgstr ""

#. type: table
#: ./rluser.texi:1959
msgid ""
"The return value is true unless an invalid option is supplied, or no matches "
"were generated."
msgstr ""

#. type: btindex
#: ./rluser.texi:1960 ./rluser.texi:1961
#, no-wrap
msgid "complete"
msgstr ""

#. type: example
#: ./rluser.texi:1967
#, no-wrap
msgid ""
"@code{complete [-abcdefgjksuv] [-o @var{comp-option}] [-DE] [-A "
"@var{action}] [-G @var{globpat}] [-W @var{wordlist}]\n"
"[-F @var{function}] [-C @var{command}] [-X @var{filterpat}]\n"
"[-P @var{prefix}] [-S @var{suffix}] @var{name} [@var{name} @dots{}]}\n"
"@code{complete -pr [-DE] [@var{name} @dots{}]}\n"
msgstr ""

#. type: table
#: ./rluser.texi:1982
msgid ""
"Specify how arguments to each @var{name} should be completed.  If the "
"@option{-p} option is supplied, or if no options are supplied, existing "
"completion specifications are printed in a way that allows them to be reused "
"as input.  The @option{-r} option removes a completion specification for "
"each @var{name}, or, if no @var{name}s are supplied, all completion "
"specifications.  The @option{-D} option indicates that the remaining options "
"and actions should apply to the ``default'' command completion; that is, "
"completion attempted on a command for which no completion has previously "
"been defined.  The @option{-E} option indicates that the remaining options "
"and actions should apply to ``empty'' command completion; that is, "
"completion attempted on a blank line."
msgstr ""

#. type: table
#: ./rluser.texi:1986
msgid ""
"The process of applying these completion specifications when word completion "
"is attempted is described above (@pxref{Programmable Completion}).  The "
"@option{-D} option takes precedence over @option{-E}."
msgstr ""

#. type: table
#: ./rluser.texi:1992
msgid ""
"Other options, if specified, have the following meanings.  The arguments to "
"the @option{-G}, @option{-W}, and @option{-X} options (and, if necessary, "
"the @option{-P} and @option{-S} options)  should be quoted to protect them "
"from expansion before the @code{complete} builtin is invoked."
msgstr ""

#. type: item
#: ./rluser.texi:1995
#, no-wrap
msgid "-o @var{comp-option}"
msgstr ""

#. type: table
#: ./rluser.texi:1999
msgid ""
"The @var{comp-option} controls several aspects of the compspec's behavior "
"beyond the simple generation of completions.  @var{comp-option} may be one "
"of:"
msgstr ""

#. type: item
#: ./rluser.texi:2002
#, no-wrap
msgid "bashdefault"
msgstr ""

#. type: table
#: ./rluser.texi:2005
msgid ""
"Perform the rest of the default Bash completions if the compspec generates "
"no matches."
msgstr ""

#. type: item
#: ./rluser.texi:2006
#, no-wrap
msgid "default"
msgstr ""

#. type: table
#: ./rluser.texi:2009
msgid ""
"Use Readline's default filename completion if the compspec generates no "
"matches."
msgstr ""

#. type: item
#: ./rluser.texi:2010
#, no-wrap
msgid "dirnames"
msgstr ""

#. type: table
#: ./rluser.texi:2012
msgid "Perform directory name completion if the compspec generates no matches."
msgstr ""

#. type: item
#: ./rluser.texi:2013
#, no-wrap
msgid "filenames"
msgstr ""

#. type: table
#: ./rluser.texi:2019
msgid ""
"Tell Readline that the compspec generates filenames, so it can perform any "
"filename-specific processing (like adding a slash to directory names quoting "
"special characters, or suppressing trailing spaces).  This option is "
"intended to be used with shell functions specified with @option{-F}."
msgstr ""

#. type: item
#: ./rluser.texi:2020
#, no-wrap
msgid "noquote"
msgstr ""

#. type: table
#: ./rluser.texi:2023
msgid ""
"Tell Readline not to quote the completed words if they are filenames "
"(quoting filenames is the default)."
msgstr ""

#. type: item
#: ./rluser.texi:2024
#, no-wrap
msgid "nosort"
msgstr ""

#. type: table
#: ./rluser.texi:2026
msgid "Tell Readline not to sort the list of possible completions alphabetically."
msgstr ""

#. type: item
#: ./rluser.texi:2027
#, no-wrap
msgid "nospace"
msgstr ""

#. type: table
#: ./rluser.texi:2030
msgid ""
"Tell Readline not to append a space (the default) to words completed at the "
"end of the line."
msgstr ""

#. type: item
#: ./rluser.texi:2031
#, no-wrap
msgid "plusdirs"
msgstr ""

#. type: table
#: ./rluser.texi:2035
msgid ""
"After any matches defined by the compspec are generated, directory name "
"completion is attempted and any matches are added to the results of the "
"other actions."
msgstr ""

#. type: item
#: ./rluser.texi:2038
#, no-wrap
msgid "-A @var{action}"
msgstr ""

#. type: table
#: ./rluser.texi:2041
msgid ""
"The @var{action} may be one of the following to generate a list of possible "
"completions:"
msgstr ""

#. type: item
#: ./rluser.texi:2043
#, no-wrap
msgid "alias"
msgstr ""

#. type: table
#: ./rluser.texi:2045
msgid "Alias names.  May also be specified as @option{-a}."
msgstr ""

#. type: item
#: ./rluser.texi:2046
#, no-wrap
msgid "arrayvar"
msgstr ""

#. type: table
#: ./rluser.texi:2048
msgid "Array variable names."
msgstr ""

#. type: item
#: ./rluser.texi:2049
#, no-wrap
msgid "binding"
msgstr ""

#. type: table
#: ./rluser.texi:2051
msgid "Readline key binding names (@pxref{Bindable Readline Commands})."
msgstr ""

#. type: item
#: ./rluser.texi:2052
#, no-wrap
msgid "builtin"
msgstr ""

#. type: table
#: ./rluser.texi:2054
msgid "Names of shell builtin commands.  May also be specified as @option{-b}."
msgstr ""

#. type: item
#: ./rluser.texi:2055
#, no-wrap
msgid "command"
msgstr ""

#. type: table
#: ./rluser.texi:2057
msgid "Command names.  May also be specified as @option{-c}."
msgstr ""

#. type: item
#: ./rluser.texi:2058
#, no-wrap
msgid "directory"
msgstr ""

#. type: table
#: ./rluser.texi:2060
msgid "Directory names.  May also be specified as @option{-d}."
msgstr ""

#. type: item
#: ./rluser.texi:2061
#, no-wrap
msgid "disabled"
msgstr ""

#. type: table
#: ./rluser.texi:2063
msgid "Names of disabled shell builtins."
msgstr ""

#. type: item
#: ./rluser.texi:2064
#, no-wrap
msgid "enabled"
msgstr ""

#. type: table
#: ./rluser.texi:2066
msgid "Names of enabled shell builtins."
msgstr ""

#. type: item
#: ./rluser.texi:2067
#, no-wrap
msgid "export"
msgstr ""

#. type: table
#: ./rluser.texi:2069
msgid "Names of exported shell variables.  May also be specified as @option{-e}."
msgstr ""

#. type: item
#: ./rluser.texi:2070
#, no-wrap
msgid "file"
msgstr ""

#. type: table
#: ./rluser.texi:2072
msgid "File names.  May also be specified as @option{-f}."
msgstr ""

#. type: item
#: ./rluser.texi:2073
#, no-wrap
msgid "function"
msgstr ""

#. type: table
#: ./rluser.texi:2075
msgid "Names of shell functions."
msgstr ""

#. type: item
#: ./rluser.texi:2076
#, no-wrap
msgid "group"
msgstr ""

#. type: table
#: ./rluser.texi:2078
msgid "Group names.  May also be specified as @option{-g}."
msgstr ""

#. type: item
#: ./rluser.texi:2079
#, no-wrap
msgid "helptopic"
msgstr ""

#. type: table
#: ./rluser.texi:2081
msgid "Help topics as accepted by the @code{help} builtin (@pxref{Bash Builtins})."
msgstr ""

#. type: item
#: ./rluser.texi:2082
#, no-wrap
msgid "hostname"
msgstr ""

#. type: table
#: ./rluser.texi:2085
msgid ""
"Hostnames, as taken from the file specified by the @env{HOSTFILE} shell "
"variable (@pxref{Bash Variables})."
msgstr ""

#. type: item
#: ./rluser.texi:2086
#, no-wrap
msgid "job"
msgstr ""

#. type: table
#: ./rluser.texi:2088
msgid "Job names, if job control is active.  May also be specified as @option{-j}."
msgstr ""

#. type: item
#: ./rluser.texi:2089
#, no-wrap
msgid "keyword"
msgstr ""

#. type: table
#: ./rluser.texi:2091
msgid "Shell reserved words.  May also be specified as @option{-k}."
msgstr ""

#. type: item
#: ./rluser.texi:2092
#, no-wrap
msgid "running"
msgstr ""

#. type: table
#: ./rluser.texi:2094
msgid "Names of running jobs, if job control is active."
msgstr ""

#. type: item
#: ./rluser.texi:2095
#, no-wrap
msgid "service"
msgstr ""

#. type: table
#: ./rluser.texi:2097
msgid "Service names.  May also be specified as @option{-s}."
msgstr ""

#. type: item
#: ./rluser.texi:2098
#, no-wrap
msgid "setopt"
msgstr ""

#. type: table
#: ./rluser.texi:2101
msgid ""
"Valid arguments for the @option{-o} option to the @code{set} builtin "
"(@pxref{The Set Builtin})."
msgstr ""

#. type: item
#: ./rluser.texi:2102
#, no-wrap
msgid "shopt"
msgstr ""

#. type: table
#: ./rluser.texi:2105
msgid ""
"Shell option names as accepted by the @code{shopt} builtin (@pxref{Bash "
"Builtins})."
msgstr ""

#. type: item
#: ./rluser.texi:2106
#, no-wrap
msgid "signal"
msgstr ""

#. type: table
#: ./rluser.texi:2108
msgid "Signal names."
msgstr ""

#. type: item
#: ./rluser.texi:2109
#, no-wrap
msgid "stopped"
msgstr ""

#. type: table
#: ./rluser.texi:2111
msgid "Names of stopped jobs, if job control is active."
msgstr ""

#. type: item
#: ./rluser.texi:2112
#, no-wrap
msgid "user"
msgstr ""

#. type: table
#: ./rluser.texi:2114
msgid "User names.  May also be specified as @option{-u}."
msgstr ""

#. type: item
#: ./rluser.texi:2115
#, no-wrap
msgid "variable"
msgstr ""

#. type: table
#: ./rluser.texi:2117
msgid "Names of all shell variables.  May also be specified as @option{-v}."
msgstr ""

#. type: item
#: ./rluser.texi:2119
#, no-wrap
msgid "-C @var{command}"
msgstr ""

#. type: table
#: ./rluser.texi:2122
msgid ""
"@var{command} is executed in a subshell environment, and its output is used "
"as the possible completions."
msgstr ""

#. type: item
#: ./rluser.texi:2123
#, no-wrap
msgid "-F @var{function}"
msgstr ""

#. type: table
#: ./rluser.texi:2132
msgid ""
"The shell function @var{function} is executed in the current shell "
"environment.  When it is executed, $1 is the name of the command whose "
"arguments are being completed, $2 is the word being completed, and $3 is the "
"word preceding the word being completed, as described above "
"(@pxref{Programmable Completion}).  When it finishes, the possible "
"completions are retrieved from the value of the @env{COMPREPLY} array "
"variable."
msgstr ""

#. type: item
#: ./rluser.texi:2133
#, no-wrap
msgid "-G @var{globpat}"
msgstr ""

#. type: table
#: ./rluser.texi:2136
msgid ""
"The filename expansion pattern @var{globpat} is expanded to generate the "
"possible completions."
msgstr ""

#. type: item
#: ./rluser.texi:2137
#, no-wrap
msgid "-P @var{prefix}"
msgstr ""

#. type: table
#: ./rluser.texi:2140
msgid ""
"@var{prefix} is added at the beginning of each possible completion after all "
"other options have been applied."
msgstr ""

#. type: item
#: ./rluser.texi:2141
#, no-wrap
msgid "-S @var{suffix}"
msgstr ""

#. type: table
#: ./rluser.texi:2144
msgid ""
"@var{suffix} is appended to each possible completion after all other options "
"have been applied."
msgstr ""

#. type: item
#: ./rluser.texi:2145
#, no-wrap
msgid "-W @var{wordlist}"
msgstr ""

#. type: table
#: ./rluser.texi:2151
msgid ""
"The @var{wordlist} is split using the characters in the @env{IFS} special "
"variable as delimiters, and each resultant word is expanded.  The possible "
"completions are the members of the resultant list which match the word being "
"completed."
msgstr ""

#. type: item
#: ./rluser.texi:2152
#, no-wrap
msgid "-X @var{filterpat}"
msgstr ""

#. type: table
#: ./rluser.texi:2159
msgid ""
"@var{filterpat} is a pattern as used for filename expansion.  It is applied "
"to the list of possible completions generated by the preceding options and "
"arguments, and each completion matching @var{filterpat} is removed from the "
"list.  A leading @samp{!} in @var{filterpat} negates the pattern; in this "
"case, any completion not matching @var{filterpat} is removed."
msgstr ""

#. type: table
#: ./rluser.texi:2166
msgid ""
"The return value is true unless an invalid option is supplied, an option "
"other than @option{-p} or @option{-r} is supplied without a @var{name} "
"argument, an attempt is made to remove a completion specification for a "
"@var{name} for which no specification exists, or an error occurs adding a "
"completion specification."
msgstr ""

#. type: btindex
#: ./rluser.texi:2167 ./rluser.texi:2168
#, no-wrap
msgid "compopt"
msgstr ""

#. type: example
#: ./rluser.texi:2171
#, no-wrap
msgid "@code{compopt} [-o @var{option}] [-DE] [+o @var{option}] [@var{name}]\n"
msgstr ""

#. type: table
#: ./rluser.texi:2185
msgid ""
"Modify completion options for each @var{name} according to the "
"@var{option}s, or for the currently-executing completion if no @var{name}s "
"are supplied.  If no @var{option}s are given, display the completion options "
"for each @var{name} or the current completion.  The possible values of "
"@var{option} are those valid for the @code{complete} builtin described "
"above.  The @option{-D} option indicates that the remaining options should "
"apply to the ``default'' command completion; that is, completion attempted "
"on a command for which no completion has previously been defined.  The "
"@option{-E} option indicates that the remaining options should apply to "
"``empty'' command completion; that is, completion attempted on a blank line."
msgstr ""

#. type: table
#: ./rluser.texi:2187
msgid "The @option{-D} option takes precedence over @option{-E}."
msgstr ""

#. type: table
#: ./rluser.texi:2191
msgid ""
"The return value is true unless an invalid option is supplied, an attempt is "
"made to modify the options for a @var{name} for which no completion "
"specification exists, or an output error occurs."
msgstr ""

#. type: section
#: ./rluser.texi:2194 ./rluser.texi:2195
#, no-wrap
msgid "A Programmable Completion Example"
msgstr ""

#. type: ifset
#: ./rluser.texi:2200
msgid ""
"The most common way to obtain additional completion functionality beyond the "
"default actions @code{complete} and @code{compgen} provide is to use a shell "
"function and bind it to a particular command using @code{complete -F}."
msgstr ""

#. type: ifset
#: ./rluser.texi:2207
msgid ""
"The following function provides completions for the @code{cd} builtin.  It "
"is a reasonably good example of what shell functions must do when used for "
"completion.  This function uses the word passsed as @code{$2} to determine "
"the directory name to complete.  You can also use the @code{COMP_WORDS} "
"array variable; the current word is indexed by the @code{COMP_CWORD} "
"variable."
msgstr ""

#. type: ifset
#: ./rluser.texi:2219
msgid ""
"The function relies on the @code{complete} and @code{compgen} builtins to do "
"much of the work, adding only the things that the Bash @code{cd} does beyond "
"accepting basic directory names: tilde expansion (@pxref{Tilde Expansion}), "
"searching directories in @var{$CDPATH}, which is described above "
"(@pxref{Bourne Shell Builtins}), and basic support for the "
"@code{cdable_vars} shell option (@pxref{The Shopt Builtin}).  "
"@code{_comp_cd} modifies the value of @var{IFS} so that it contains only a "
"newline to accommodate file names containing spaces and tabs -- "
"@code{compgen} prints the possible completions it generates one per line."
msgstr ""

#. type: ifset
#: ./rluser.texi:2223
msgid ""
"Possible completions go into the @var{COMPREPLY} array variable, one "
"completion per array element.  The programmable completion system retrieves "
"the completions from there when the function returns."
msgstr ""

#. type: example
#: ./rluser.texi:2232
#, no-wrap
msgid ""
"# A completion function for the cd builtin\n"
"# based on the cd completion function from the bash_completion package\n"
"_comp_cd()\n"
"@{\n"
"    local IFS=$' \\t\\n'    # normalize IFS\n"
"    local cur _skipdot _cdpath\n"
"    local i j k\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:2238
#, no-wrap
msgid ""
"    # Tilde expansion, with side effect of expanding tilde to full "
"pathname\n"
"    case \"$2\" in\n"
"    \\~*)    eval cur=\"$2\" ;;\n"
"    *)      cur=$2 ;;\n"
"    esac\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:2263
#, no-wrap
msgid ""
"    # no cdpath or absolute pathname -- straight directory completion\n"
"    if [[ -z \"$@{CDPATH:-@}\" ]] || [[ \"$cur\" == @@(./*|../*|/*) ]]; "
"then\n"
"        # compgen prints paths one per line; could also use while loop\n"
"        IFS=$'\\n'\n"
"        COMPREPLY=( $(compgen -d -- \"$cur\") )\n"
"        IFS=$' \\t\\n'\n"
"    # CDPATH+directories in the current directory if not in CDPATH\n"
"    else\n"
"        IFS=$'\\n'\n"
"        _skipdot=false\n"
"        # preprocess CDPATH to convert null directory names to .\n"
"        _cdpath=$@{CDPATH/#:/.:@}\n"
"        _cdpath=$@{_cdpath//::/:.:@}\n"
"        _cdpath=$@{_cdpath/%:/:.@}\n"
"        for i in $@{_cdpath//:/$'\\n'@}; do\n"
"            if [[ $i -ef . ]]; then _skipdot=true; fi\n"
"            k=\"$@{#COMPREPLY[@@]@}\"\n"
"            for j in $( compgen -d -- \"$i/$cur\" ); do\n"
"                COMPREPLY[k++]=$@{j#$i/@}        # cut off directory\n"
"            done\n"
"        done\n"
"        $_skipdot || COMPREPLY+=( $(compgen -d -- \"$cur\") )\n"
"        IFS=$' \\t\\n'\n"
"    fi\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:2268
#, no-wrap
msgid ""
"    # variable names if appropriate shell option set and no completions\n"
"    if shopt -q cdable_vars && [[ $@{#COMPREPLY[@@]@} -eq 0 ]]; then\n"
"        COMPREPLY=( $(compgen -v -- \"$cur\") )\n"
"    fi\n"
"\n"
msgstr ""

#. type: example
#: ./rluser.texi:2271
#, no-wrap
msgid ""
"    return 0\n"
"@}\n"
msgstr ""

#. type: ifset
#: ./rluser.texi:2275
msgid ""
"We install the completion function using the @option{-F} option to "
"@code{complete}:"
msgstr ""

#. type: example
#: ./rluser.texi:2280
#, no-wrap
msgid ""
"# Tell readline to quote appropriate and append slashes to directories;\n"
"# use the bash default completion for other arguments\n"
"complete -o filenames -o nospace -o bashdefault -F _comp_cd cd\n"
msgstr ""

#. type: ifset
#: ./rluser.texi:2298
msgid ""
"Since we'd like Bash and Readline to take care of some of the other details "
"for us, we use several other options to tell Bash and Readline what to do.  "
"The @option{-o filenames} option tells Readline that the possible "
"completions should be treated as filenames, and quoted appropriately.  That "
"option will also cause Readline to append a slash to filenames it can "
"determine are directories (which is why we might want to extend "
"@code{_comp_cd} to append a slash if we're using directories found via "
"@var{CDPATH}: Readline can't tell those completions are directories).  The "
"@option{-o nospace} option tells Readline to not append a space character to "
"the directory name, in case we want to append to it.  The @option{-o "
"bashdefault} option brings in the rest of the \"Bash default\" completions "
"-- possible completion that Bash adds to the default Readline set.  These "
"include things like command name completion, variable completion for words "
"beginning with @samp{@{}, completions containing pathname expansion patterns "
"(@pxref{Filename Expansion}), and so on."
msgstr ""

#. type: ifset
#: ./rluser.texi:2301
msgid ""
"Once installed using @code{complete}, @code{_comp_cd} will be called every "
"time we attempt word completion for a @code{cd} command."
msgstr ""

#. type: ifset
#: ./rluser.texi:2308
msgid ""
"Many more examples -- an extensive collection of completions for most of the "
"common GNU, Unix, and Linux commands -- are available as part of the "
"bash_completion project.  This is installed by default on many GNU/Linux "
"distributions.  Originally written by Ian Macdonald, the project now lives "
"at @url{http://bash-completion.alioth.debian.org/}.  There are ports for "
"other systems such as Solaris and Mac OS X."
msgstr ""

#. type: ifset
#: ./rluser.texi:2311
msgid ""
"An older version of the bash_completion package is distributed with bash in "
"the @file{examples/complete} subdirectory."
msgstr ""
